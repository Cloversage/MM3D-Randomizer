         w __cxa_pure_virtual
         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w userAppExit
         w userAppInit
00000000 00000401 B __ctru_dev_path_buf
00000000 b _TLS_MODULE_BASE_
00000000 a shift
00000000 a shift
00000404 00000802 B __ctru_dev_utf16_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac t .udivsi3_skip_div0_test
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc T __aeabi_ldivmod
00100990 T __aeabi_uldivmod
001009cc 00000014 T __restore_core_regs
001009cc 00000014 T restore_core_regs
001009e0 T __gnu_Unwind_Restore_VFP
001009e8 T __gnu_Unwind_Save_VFP
001009f0 T __gnu_Unwind_Restore_VFP_D
001009f8 T __gnu_Unwind_Save_VFP_D
00100a00 T __gnu_Unwind_Restore_VFP_D_16_to_31
00100a08 T __gnu_Unwind_Save_VFP_D_16_to_31
00100a10 T __gnu_Unwind_Restore_WMMXD
00100a54 T __gnu_Unwind_Save_WMMXD
00100a98 T __gnu_Unwind_Restore_WMMXC
00100aac T __gnu_Unwind_Save_WMMXC
00100ac0 00000024 T ___Unwind_RaiseException
00100ac0 00000024 T _Unwind_RaiseException
00100ae4 00000024 T ___Unwind_Resume
00100ae4 00000024 T _Unwind_Resume
00100b08 00000024 T ___Unwind_Resume_or_Rethrow
00100b08 00000024 T _Unwind_Resume_or_Rethrow
00100b2c 00000024 T ___Unwind_ForcedUnwind
00100b2c 00000024 T _Unwind_ForcedUnwind
00100b50 00000024 T ___Unwind_Backtrace
00100b50 00000024 T _Unwind_Backtrace
00100b88 00000390 T strcmp
00100f10 t __do_global_dtors_aux
00100f50 t frame_dummy
00100f7c 00000078 T Cosmetics::ValidHexString(std::basic_string_view<char, std::char_traits<char> >)
00100ff4 00000128 T Cosmetics::CustomColorOptionText[abi:cxx11](std::basic_string_view<char, std::char_traits<char> >)
0010111c 0000001c T CitraPrint(std::basic_string_view<char, std::char_traits<char> >)
00101138 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
001011a0 000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
001011a0 000000b0 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
00101250 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
00101250 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
00101278 00000094 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::initializer_list<unsigned long>, std::allocator<unsigned long> const&)
00101278 00000094 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::initializer_list<unsigned long>, std::allocator<unsigned long> const&)
0010130c 00000788 t __static_initialization_and_destruction_0(int, int) [clone .constprop.0]
00101a94 00000128 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
00101bbc 00000008 t _GLOBAL__sub_I__ZN7Dungeon11DungeonInfoC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmmmmhSt6vectorImSaImEE
00101bc4 00000008 t _GLOBAL__sub_D__ZN7Dungeon11DungeonInfoC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmmmmhSt6vectorImSaImEE
00101bcc 00000040 T VanillaFill()
00101c0c 00000250 W void std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > >::_M_realloc_insert<std::vector<unsigned long, std::allocator<unsigned long> > const&>(__gnu_cxx::__normal_iterator<std::vector<unsigned long, std::allocator<unsigned long> >*, std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > >, std::vector<unsigned long, std::allocator<unsigned long> > const&)
00101e5c 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >)
00101e98 0000005c W std::vector<unsigned long, std::allocator<unsigned long> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >)
00101ef4 00000900 T GetAccessibleLocations(std::vector<unsigned long, std::allocator<unsigned long> > const&, SearchMode)
001027f4 00000128 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long&&)
0010291c 00000104 t FastFill(std::vector<unsigned long, std::allocator<unsigned long> >, std::vector<unsigned long, std::allocator<unsigned long> >, bool)
00102a20 00001104 T Fill()
00103b24 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
00103bd0 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
00103c80 000000f8 t std::vector<Text, std::allocator<Text> >::vector(std::initializer_list<Text>, std::allocator<Text> const&) [clone .constprop.0] [clone .isra.0]
00103d78 00000324 t HintText::operator=(HintText&&) [clone .isra.0]
0010409c 00000128 W Text::Text(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0010409c 00000128 W Text::Text(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001041c4 00000064 W Text::~Text()
001041c4 00000064 W Text::~Text()
00104228 00000228 W HintText::Item(std::vector<Text, std::allocator<Text> >&&, Text&&)
00104450 00000228 W HintText::Exclude(std::vector<Text, std::allocator<Text> >&&, Text&&)
00104678 00000038 W Text::Text()
00104678 00000038 W Text::Text()
001046b0 00000098 W std::vector<Text, std::allocator<Text> >::~vector()
001046b0 00000098 W std::vector<Text, std::allocator<Text> >::~vector()
00104748 00016eb0 T HintTable_Init()
0011b5f8 00000064 t _GLOBAL__sub_I__Z14HintTable_Initv
0011b65c 00000100 t _GLOBAL__sub_D__Z14HintTable_Initv
0011b75c 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0011b80c 0000018c T Item::Item(bool, int, bool*, Text, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Region, unsigned long, unsigned long, ItemCategory, LocationCategory)
0011b80c 0000018c T Item::Item(bool, int, bool*, Text, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Region, unsigned long, unsigned long, ItemCategory, LocationCategory)
0011b998 0000018c T Item::Item(bool, int, unsigned char*, Text, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Region, unsigned long, unsigned long, ItemCategory, LocationCategory)
0011b998 0000018c T Item::Item(bool, int, unsigned char*, Text, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Region, unsigned long, unsigned long, ItemCategory, LocationCategory)
0011bb24 00000080 T Item::~Item()
0011bb24 00000080 T Item::~Item()
0011bba4 00000040 T Item::ApplyEffect()
0011bbe4 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0011bc90 00000094 t Item::operator=(Item const&) [clone .isra.0]
0011bd24 0000ef04 T ItemTable_Init()
0012ac28 00000018 T ItemTable(unsigned long)
0012ac40 00000074 t _GLOBAL__sub_I__Z14ItemTable_Initv
0012acb4 0000002c t _GLOBAL__sub_D__Z14ItemTable_Initv
0012ace0 000000e0 t __gnu_cxx::__normal_iterator<Category const*, std::vector<Category, std::allocator<Category> > > std::__find_if<__gnu_cxx::__normal_iterator<Category const*, std::vector<Category, std::allocator<Category> > >, __gnu_cxx::__ops::_Iter_pred<ItemLocation::IsCategory(Category) const::{lambda(auto:1)#1}> >(__gnu_cxx::__normal_iterator<Category const*, std::vector<Category, std::allocator<Category> > >, __gnu_cxx::__normal_iterator<Category const*, std::vector<Category, std::allocator<Category> > >, __gnu_cxx::__ops::_Iter_pred<ItemLocation::IsCategory(Category) const::{lambda(auto:1)#1}>, std::random_access_iterator_tag) [clone .isra.0]
0012adc0 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0012ae6c 0000008c t std::vector<Category, std::allocator<Category> >::vector(std::initializer_list<Category>, std::allocator<Category> const&) [clone .constprop.0] [clone .isra.0]
0012aef8 00000224 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_insert<__gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > > >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long const*, std::vector<unsigned long, std::allocator<unsigned long> > >, std::forward_iterator_tag) [clone .isra.0]
0012b11c 000001c8 t Option::operator=(Option&&) [clone .isra.0]
0012b2e4 00000190 t ItemLocation::operator=(ItemLocation&&) [clone .isra.0]
0012b474 00000140 W Option::Bool(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::basic_string_view<char, std::char_traits<char> >, std::allocator<std::basic_string_view<char, std::char_traits<char> > > >, OptionCategory, unsigned char, bool)
0012b5b4 00000410 W ItemLocation::ItemLocation(ItemLocationType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, std::vector<Category, std::allocator<Category> >, unsigned short)
0012b5b4 00000410 W ItemLocation::ItemLocation(ItemLocationType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, std::vector<Category, std::allocator<Category> >, unsigned short)
0012b9c4 000000d4 W ItemLocation::~ItemLocation()
0012b9c4 000000d4 W ItemLocation::~ItemLocation()
0012ba98 000000f0 W ItemLocation::Chest(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, unsigned long, unsigned long, std::vector<Category, std::allocator<Category> >&&)
0012bb88 00000318 W std::array<ItemLocation, 988u>::array()
0012bb88 00000318 W std::array<ItemLocation, 988u>::array()
0012bea0 000036a4 T LocationTable_Init()
0012f544 00000018 T Location(unsigned long)
0012f55c 00000020 T GenerateLocationPool()
0012f580 000001cc T PlaceItemInLocation(unsigned long, unsigned long, bool)
0012f74c 000000ac T LocationReset()
0012f7f8 000000b8 T ItemReset()
0012f8b0 0000029c t __static_initialization_and_destruction_0(int, int) [clone .constprop.0]
0012fb4c 000000d0 T GetLocations(std::vector<unsigned long, std::allocator<unsigned long> > const&, Category, Category)
0012fc1c 00000128 W void std::vector<Option*, std::allocator<Option*> >::_M_realloc_insert<Option*>(__gnu_cxx::__normal_iterator<Option**, std::vector<Option*, std::allocator<Option*> > >, Option*&&)
0012fd44 000008a4 W ItemLocation::AddExcludeOption()
001305e8 00000050 T AddExcludedOptions()
00130638 00000008 t _GLOBAL__sub_I__Z18LocationTable_Initv
00130640 00000008 t _GLOBAL__sub_D__Z18LocationTable_Initv
00130648 00000074 T GetJunkItem()
001306bc 00000828 T GenerateItemPool()
00130ee4 00000034 t _GLOBAL__sub_I_ItemPool
00130f18 0000003c t _GLOBAL__sub_D_ItemPool
00130f54 00000008 t AreaTable_Init()::{lambda()#1}::_FUN()
00130f5c 00000010 t AreaTable_Init()::{lambda()#5}::_FUN()
00130f6c 00000034 t AreaTable_Init()::{lambda()#6}::_FUN()
00130fa0 00000034 t AreaTable_Init()::{lambda()#8}::_FUN()
00130fd4 00000010 t AreaTable_Init()::{lambda()#9}::_FUN()
00130fe4 00000010 t AreaTable_Init()::{lambda()#10}::_FUN()
00130ff4 00000034 t AreaTable_Init()::{lambda()#12}::_FUN()
00131028 00000020 t AreaTable_Init()::{lambda()#14}::_FUN()
00131048 00000034 t AreaTable_Init()::{lambda()#15}::_FUN()
0013107c 00000010 t AreaTable_Init()::{lambda()#16}::_FUN()
0013108c 00000020 t AreaTable_Init()::{lambda()#18}::_FUN()
001310ac 00000010 t AreaTable_Init()::{lambda()#20}::_FUN()
001310bc 00000010 t AreaTable_Init()::{lambda()#21}::_FUN()
001310cc 00000020 t AreaTable_Init()::{lambda()#26}::_FUN()
001310ec 00000010 t AreaTable_Init()::{lambda()#29}::_FUN()
001310fc 00000034 t AreaTable_Init()::{lambda()#30}::_FUN()
00131130 00000038 t AreaTable_Init()::{lambda()#35}::_FUN()
00131168 00000010 t AreaTable_Init()::{lambda()#38}::_FUN()
00131178 00000020 t AreaTable_Init()::{lambda()#43}::_FUN()
00131198 00000020 t AreaTable_Init()::{lambda()#48}::_FUN()
001311b8 00000034 t AreaTable_Init()::{lambda()#50}::_FUN()
001311ec 00000020 t AreaTable_Init()::{lambda()#51}::_FUN()
0013120c 00000034 t AreaTable_Init()::{lambda()#52}::_FUN()
00131240 00000010 t AreaTable_Init()::{lambda()#55}::_FUN()
00131250 00000010 t AreaTable_Init()::{lambda()#56}::_FUN()
00131260 00000020 t AreaTable_Init()::{lambda()#57}::_FUN()
00131280 00000020 t AreaTable_Init()::{lambda()#61}::_FUN()
001312a0 00000034 t AreaTable_Init()::{lambda()#69}::_FUN()
001312d4 00000010 t AreaTable_Init()::{lambda()#74}::_FUN()
001312e4 00000034 t AreaTable_Init()::{lambda()#24}::_FUN()
00131318 00000034 t AreaTable_Init()::{lambda()#33}::_FUN()
0013134c 00000034 t AreaTable_Init()::{lambda()#40}::_FUN()
00131380 0000005c t AreaTable_Init()::{lambda()#68}::_FUN()
001313dc 00000084 t AreaTable_Init()::{lambda()#67}::_FUN()
00131460 000000cc t AreaTable_Init()::{lambda()#66}::_FUN()
0013152c 00000048 t AreaTable_Init()::{lambda()#54}::_FUN()
00131574 0000005c t AreaTable_Init()::{lambda()#42}::_FUN()
001315d0 00000084 t AreaTable_Init()::{lambda()#41}::_FUN()
00131654 00000070 t AreaTable_Init()::{lambda()#34}::_FUN()
001316c4 0000004c t AreaTable_Init()::{lambda()#23}::_FUN()
00131710 00000048 t AreaTable_Init()::{lambda()#17}::_FUN()
00131758 00000048 t AreaTable_Init()::{lambda()#13}::_FUN()
001317a0 00000048 t AreaTable_Init()::{lambda()#11}::_FUN()
001317e8 00000048 t AreaTable_Init()::{lambda()#7}::_FUN()
00131830 00000070 t AreaTable_Init()::{lambda()#4}::_FUN()
001318a0 00000050 t AreaTable_Init()::{lambda()#2}::_FUN()
001318f0 00000130 t std::vector<bool (*)(), std::allocator<bool (*)()> >::operator=(std::vector<bool (*)(), std::allocator<bool (*)()> > const&) [clone .isra.0]
00131a20 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
00131acc 00000008 t AreaTable_Init()::{lambda()#53}::_FUN()
00131ad4 00000008 t AreaTable_Init()::{lambda()#3}::_FUN()
00131adc 00000008 t AreaTable_Init()::{lambda()#22}::_FUN()
00131ae4 00000008 t AreaTable_Init()::{lambda()#27}::_FUN()
00131aec 00000008 t AreaTable_Init()::{lambda()#28}::_FUN()
00131af4 00000008 t AreaTable_Init()::{lambda()#36}::_FUN()
00131afc 00000008 t AreaTable_Init()::{lambda()#37}::_FUN()
00131b04 00000008 t AreaTable_Init()::{lambda()#39}::_FUN()
00131b0c 00000010 t AreaTable_Init()::{lambda()#63}::_FUN()
00131b1c 00000010 t AreaTable_Init()::{lambda()#64}::_FUN()
00131b2c 00000010 t AreaTable_Init()::{lambda()#65}::_FUN()
00131b3c 00000020 t AreaTable_Init()::{lambda()#62}::_FUN()
00131b5c 00000020 t AreaTable_Init()::{lambda()#19}::_FUN()
00131b7c 00000020 t AreaTable_Init()::{lambda()#44}::_FUN()
00131b9c 00000020 t AreaTable_Init()::{lambda()#49}::_FUN()
00131bbc 00000034 t AreaTable_Init()::{lambda()#25}::_FUN()
00131bf0 00000020 t AreaTable_Init()::{lambda()#58}::_FUN()
00131c10 00000020 t AreaTable_Init()::{lambda()#59}::_FUN()
00131c30 00000020 t AreaTable_Init()::{lambda()#60}::_FUN()
00131c50 00000020 t AreaTable_Init()::{lambda()#47}::_FUN()
00131c70 00000020 t AreaTable_Init()::{lambda()#45}::_FUN()
00131c90 00000020 t AreaTable_Init()::{lambda()#46}::_FUN()
00131cb0 0000008c t std::vector<bool (*)(), std::allocator<bool (*)()> >::vector(std::initializer_list<bool (*)()>, std::allocator<bool (*)()> const&) [clone .constprop.0] [clone .isra.0]
00131d3c 00000034 t AreaTable_Init()::{lambda()#32}::_FUN()
00131d70 00000034 t AreaTable_Init()::{lambda()#31}::_FUN()
00131da4 00000034 t AreaTable_Init()::{lambda()#71}::_FUN()
00131dd8 00000034 t AreaTable_Init()::{lambda()#72}::_FUN()
00131e0c 00000034 t AreaTable_Init()::{lambda()#73}::_FUN()
00131e40 00000034 t AreaTable_Init()::{lambda()#70}::_FUN()
00131e74 000002ec t std::vector<LocationAccess, std::allocator<LocationAccess> >::operator=(std::vector<LocationAccess, std::allocator<LocationAccess> > const&) [clone .isra.0]
00132160 000002ec t std::vector<EventAccess, std::allocator<EventAccess> >::operator=(std::vector<EventAccess, std::allocator<EventAccess> > const&) [clone .isra.0]
0013244c 00000048 t Area::operator=(Area const&) [clone .isra.0]
00132494 00000120 T Area::Area(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, std::vector<EventAccess, std::allocator<EventAccess> >, std::vector<LocationAccess, std::allocator<LocationAccess> >)
00132494 00000120 T Area::Area(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, std::vector<EventAccess, std::allocator<EventAccess> >, std::vector<LocationAccess, std::allocator<LocationAccess> >)
001325b4 000000e8 T Area::~Area()
001325b4 000000e8 T Area::~Area()
0013269c 00000008 T Area::UpdateEvents()
001326a4 00000054 T Areas::AccessReset()
001326f8 000000c8 T Areas::ResetAllLocations()
001327c0 00000034 T AreaTable(unsigned long)
001327f4 0000005c W std::vector<EventAccess, std::allocator<EventAccess> >::~vector()
001327f4 0000005c W std::vector<EventAccess, std::allocator<EventAccess> >::~vector()
00132850 0000005c W std::vector<LocationAccess, std::allocator<LocationAccess> >::~vector()
00132850 0000005c W std::vector<LocationAccess, std::allocator<LocationAccess> >::~vector()
001328ac 0000014c W std::vector<bool (*)(), std::allocator<bool (*)()> >::_M_default_append(unsigned int)
001329f8 00000068 W LocationAccess::LocationAccess(unsigned long, std::vector<bool (*)(), std::allocator<bool (*)()> >)
001329f8 00000068 W LocationAccess::LocationAccess(unsigned long, std::vector<bool (*)(), std::allocator<bool (*)()> >)
00132a60 0000597c T AreaTable_Init()
001383dc 0000005c t _GLOBAL__sub_I__ZNK14LocationAccess6CanBuyEv
00138438 000000fc t _GLOBAL__sub_D__ZNK14LocationAccess6CanBuyEv
00138534 00000234 t Logic::HasItem(Logic::CanUseItem) [clone .part.0]
00138768 00000080 t Logic::HasItem(Logic::CanUseItem)
001387e8 000000c0 T Logic::CanUse(Logic::CanUseItem)
001388a8 00011dd8 T Logic::UpdateHelpers()
0014a680 000003dc T Logic::LogicReset()
0014aa60 00000184 T main
0014abe4 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0014ac94 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.0]
0014ad44 000000ac T PrintTopScreen()
0014adf0 00000194 T MoveCursor(unsigned long)
0014af84 000000e0 T PrintMainMenu()
0014b064 00000130 T PrintSubMenu()
0014b194 000001a8 T PrintPresetsMenu()
0014b33c 000002ac T PrintGenerateMenu()
0014b5e8 00000080 T ClearDescription()
0014b668 00000270 T UpdatePresetsMenu(unsigned long)
0014b8d8 00000048 T PrintOptionDescription()
0014b920 0000028c T PrintOptionSubMenu()
0014bbac 00000570 T GenerateRandomizer()
0014c11c 000000d8 T GetInput[abi:cxx11](char const*)
0014c1f4 00000210 T UpdateCustomCosmeticColors(unsigned long)
0014c404 000000bc T UpdateOptionSubMenu(unsigned long)
0014c4c0 00000258 T ModeChangeInit()
0014c718 00000128 W void std::vector<Menu*, std::allocator<Menu*> >::_M_realloc_insert<Menu* const&>(__gnu_cxx::__normal_iterator<Menu**, std::vector<Menu*, std::allocator<Menu*> > >, Menu* const&)
0014c840 000006a4 T MenuUpdate(unsigned long)
0014cee4 00000174 T MenuInit()
0014d058 00000028 t _GLOBAL__sub_I__Z14PrintTopScreenv
0014d080 0000007c t _GLOBAL__sub_D__Z14PrintTopScreenv
0014d0fc 000001cc T CopyFile(unsigned long long, char const*, char const*)
0014d2c8 0000014c T WritePatch(unsigned long, long, char*, unsigned long&, unsigned long&, unsigned long&, char*)
0014d414 000005c4 T WriteAllPatches()
0014d9d8 00000310 T Playthrough::Playthrough_Init(unsigned long)
0014dce8 00000388 T Playthrough::Playthrough_Repeat(int)
0014e070 00000004 W std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)0>::_M_dispose()
0014e074 0000000c W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_destroy()
0014e080 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0014e130 00000164 t PresetPath(std::basic_string_view<char, std::char_traits<char> >, OptionCategory)
0014e294 00000404 W Option::SetSelectedIndexByString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0014e698 0000016c T CreatePresetDirectories()
0014e808 000000d8 T DeletePreset(std::basic_string_view<char, std::char_traits<char> >, OptionCategory)
0014e8e0 00000290 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0014eb70 000004b0 T GetSettingsPresets[abi:cxx11]()
0014f020 00000040 t _GLOBAL__sub_I__Z23CreatePresetDirectoriesv
0014f060 00000020 t _GLOBAL__sub_D__Z23CreatePresetDirectoriesv
0014f080 000002c8 T SavePreset(std::basic_string_view<char, std::char_traits<char> >, OptionCategory)
0014f348 00000028 T SaveSpecifiedPreset(std::basic_string_view<char, std::char_traits<char> >, OptionCategory)
0014f370 0000002c T SaveCachedSettings()
0014f39c 00000030 T SaveCachedCosmetics()
0014f3cc 000004b0 T LoadPreset(std::basic_string_view<char, std::char_traits<char> >, OptionCategory)
0014f87c 0000033c T LoadCachedSettings()
0014fbb8 0000033c T LoadCachedCosmetics()
0014fef4 000000a8 T Random_Init(unsigned long)
0014ff9c 000001b8 W std::mersenne_twister_engine<unsigned long long, 64u, 312u, 156u, 31u, 13043109905998158313ull, 29u, 6148914691236517205ull, 17u, 8202884508482404352ull, 37u, 18444473444759240704ull, 43u, 6364136223846793005ull>::operator()()
00150154 0000011c T Random(int, int)
00150270 00000088 t _GLOBAL__sub_I__Z11Random_Initm
001502f8 000000e0 t _GLOBAL__sub_I_logicGlitchless
001503d8 00000020 t _GLOBAL__sub_D_logicGlitchless
001503f8 00000084 t std::vector<std::basic_string_view<char, std::char_traits<char> >, std::allocator<std::basic_string_view<char, std::char_traits<char> > > >::vector(std::initializer_list<std::basic_string_view<char, std::char_traits<char> > >, std::allocator<std::basic_string_view<char, std::char_traits<char> > > const&) [clone .constprop.0] [clone .isra.0]
0015047c 00000224 t void std::vector<Menu*, std::allocator<Menu*> >::_M_range_insert<__gnu_cxx::__normal_iterator<Menu**, std::vector<Menu*, std::allocator<Menu*> > > >(__gnu_cxx::__normal_iterator<Menu**, std::vector<Menu*, std::allocator<Menu*> > >, __gnu_cxx::__normal_iterator<Menu**, std::vector<Menu*, std::allocator<Menu*> > >, __gnu_cxx::__normal_iterator<Menu**, std::vector<Menu*, std::allocator<Menu*> > >, std::forward_iterator_tag) [clone .isra.0]
001506a0 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0015074c 00000140 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) [clone .constprop.0] [clone .isra.0]
0015088c 00000084 t Settings::IncludeAndHide(std::vector<unsigned long, std::allocator<unsigned long> >)
00150910 0000009c W Option::~Option()
00150910 0000009c W Option::~Option()
001509ac 0000013c W Option::U8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::vector<std::basic_string_view<char, std::char_traits<char> >, std::allocator<std::basic_string_view<char, std::char_traits<char> > > >, OptionCategory, unsigned char, bool)
00150ae8 000000e0 W Menu::SubMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<Option*, std::allocator<Option*> >*, bool)
00150bc8 000000dc W Menu::Action(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned char)
00150ca4 00000878 T Settings::FillContext()
0015151c 00000858 T Settings::SetDefaultSettings()
00151d74 00000154 T Settings::CollapseCategory(Option, int, int)
00151ec8 00000290 W Option::Option(Option const&)
00151ec8 00000290 W Option::Option(Option const&)
00152158 00000eb4 T Settings::ForceChange(unsigned long, Option*)
0015300c 00000004 T Settings::RandomizeAllSettings(bool)
00153010 00000108 T Settings::UpdateSettings()
00153118 000000bc T Settings::GetMenusRecursive(Menu*)
001531d4 0000007c T Settings::GetAllMenus()
00153250 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00153250 00000064 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
001532b4 00000028 W std::_Vector_base<std::basic_string_view<char, std::char_traits<char> >, std::allocator<std::basic_string_view<char, std::char_traits<char> > > >::~_Vector_base()
001532b4 00000028 W std::_Vector_base<std::basic_string_view<char, std::char_traits<char> >, std::allocator<std::basic_string_view<char, std::char_traits<char> > > >::~_Vector_base()
001532dc 00000094 W std::vector<Option*, std::allocator<Option*> >::vector(std::initializer_list<Option*>, std::allocator<Option*> const&)
001532dc 00000094 W std::vector<Option*, std::allocator<Option*> >::vector(std::initializer_list<Option*>, std::allocator<Option*> const&)
00153370 00000140 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00153370 00000140 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001534b0 00000028 W std::_Vector_base<Option*, std::allocator<Option*> >::~_Vector_base()
001534b0 00000028 W std::_Vector_base<Option*, std::allocator<Option*> >::~_Vector_base()
001534d8 000000b4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&)
001534d8 000000b4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::basic_string_view<char, std::char_traits<char> >, void>(std::basic_string_view<char, std::char_traits<char> > const&, std::allocator<char> const&)
0015358c 00000094 W std::vector<Menu*, std::allocator<Menu*> >::vector(std::initializer_list<Menu*>, std::allocator<Menu*> const&)
0015358c 00000094 W std::vector<Menu*, std::allocator<Menu*> >::vector(std::initializer_list<Menu*>, std::allocator<Menu*> const&)
00153620 00000124 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::reserve(unsigned int)
00153744 00000028 W std::_Vector_base<Menu*, std::allocator<Menu*> >::~_Vector_base()
00153744 00000028 W std::_Vector_base<Menu*, std::allocator<Menu*> >::~_Vector_base()
0015376c 00008b60 t __static_initialization_and_destruction_0(int, int) [clone .constprop.0]
0015c2cc 00000704 T Settings::InitSettings()
0015c9d0 00000008 t _GLOBAL__sub_I__ZN8Settings4seedB5cxx11E
0015c9d8 00000008 t _GLOBAL__sub_D__ZN8Settings4seedB5cxx11E
0015c9e0 000000e0 t __gnu_cxx::__normal_iterator<Category const*, std::vector<Category, std::allocator<Category> > > std::__find_if<__gnu_cxx::__normal_iterator<Category const*, std::vector<Category, std::allocator<Category> > >, __gnu_cxx::__ops::_Iter_pred<ItemLocation::IsCategory(Category) const::{lambda(auto:1)#1}> >(__gnu_cxx::__normal_iterator<Category const*, std::vector<Category, std::allocator<Category> > >, __gnu_cxx::__normal_iterator<Category const*, std::vector<Category, std::allocator<Category> > >, __gnu_cxx::__ops::_Iter_pred<ItemLocation::IsCategory(Category) const::{lambda(auto:1)#1}>, std::random_access_iterator_tag) [clone .isra.0]
0015cac0 00000110 t std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned short>, std::allocator<std::pair<unsigned long const, unsigned short> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [clone .isra.0]
0015cbd0 00000110 t std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned short>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned short> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash_aux(unsigned int, std::integral_constant<bool, true>) [clone .isra.0]
0015cce0 00000064 t __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > > std::__upper_bound<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, __gnu_cxx::__ops::_Val_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&, __gnu_cxx::__ops::_Val_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015cd44 00000064 t __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > > std::__lower_bound<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long, __gnu_cxx::__ops::_Iter_comp_val<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&, __gnu_cxx::__ops::_Iter_comp_val<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015cda8 000000b8 t unsigned long* std::__move_merge<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015ce60 000000a0 t __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > > std::__move_merge<unsigned long*, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(unsigned long*, unsigned long*, unsigned long*, unsigned long*, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015cf00 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015cfb4 000001a0 t void std::__merge_sort_with_buffer<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015d154 00000130 t WriteStartingInventory(tinyxml2::XMLDocument&)
0015d284 000001c4 t WriteExcludedLocations(tinyxml2::XMLDocument&)
0015d448 00000240 t WriteSettings(tinyxml2::XMLDocument&, bool)
0015d688 0000019c t __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > > std::_V2::__rotate<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > > >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, std::random_access_iterator_tag) [clone .isra.0]
0015d824 00000138 t void std::__merge_without_buffer<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, int, int, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015d95c 00000074 t void std::__inplace_stable_sort<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015d9d0 00000144 t WriteLocation(tinyxml2::XMLElement*, unsigned long, bool) [clone .constprop.0]
0015db14 00000088 T GenerateHash()
0015db9c 0000000c T GetRandomizerHash[abi:cxx11]()
0015dba8 00000178 T GetRandomizerHashAsString[abi:cxx11]()
0015dd20 0000004c T PlacementLog_Msg(std::basic_string_view<char, std::char_traits<char> >)
0015dd6c 00000034 T PlacementLog_Clear()
0015dda0 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0015de24 00000210 t GetGeneralPath()
0015e034 000000b0 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned short>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned short> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0015e0e4 000001dc W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned short>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned short> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0015e2c0 00000100 W __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > > std::__rotate_adaptive<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, int>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, int, int, unsigned long*, int)
0015e3c0 000002ac t void std::__merge_adaptive<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, int, unsigned long*, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, int, int, unsigned long*, int, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015e66c 000000bc t void std::__stable_sort_adaptive<__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, int, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}> >(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, __gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long*, int, __gnu_cxx::__ops::_Iter_comp_iter<WriteIngameSpoilerLog()::{lambda(unsigned long const&, unsigned long const&)#1}>)
0015e728 00000040 t _GLOBAL__sub_I__Z12GenerateHashv
0015e768 00000044 t _GLOBAL__sub_D__Z12GenerateHashv
0015e7ac 00001064 T SpoilerLog_Write()
0015f810 000002ec T PlacementLog_Write()
0015fafc 0000001c t _GLOBAL__sub_I_StartingInventory
0015fb18 00000020 t _GLOBAL__sub_D_StartingInventory
0015fb38 00000008 W tinyxml2::XMLNode::ToElement()
0015fb40 00000008 W tinyxml2::XMLNode::ToText()
0015fb48 00000008 W tinyxml2::XMLNode::ToComment()
0015fb50 00000008 W tinyxml2::XMLNode::ToDocument()
0015fb58 00000008 W tinyxml2::XMLNode::ToDeclaration()
0015fb60 00000008 W tinyxml2::XMLNode::ToUnknown()
0015fb68 00000008 W tinyxml2::XMLNode::ToElement() const
0015fb70 00000008 W tinyxml2::XMLNode::ToText() const
0015fb78 00000008 W tinyxml2::XMLNode::ToComment() const
0015fb80 00000008 W tinyxml2::XMLNode::ToDocument() const
0015fb88 00000008 W tinyxml2::XMLNode::ToDeclaration() const
0015fb90 00000008 W tinyxml2::XMLNode::ToUnknown() const
0015fb98 00000004 W tinyxml2::XMLText::ToText()
0015fb9c 00000004 W tinyxml2::XMLText::ToText() const
0015fba0 00000004 W tinyxml2::XMLComment::ToComment()
0015fba4 00000004 W tinyxml2::XMLComment::ToComment() const
0015fba8 00000004 W tinyxml2::XMLDeclaration::ToDeclaration()
0015fbac 00000004 W tinyxml2::XMLDeclaration::ToDeclaration() const
0015fbb0 00000004 W tinyxml2::XMLUnknown::ToUnknown()
0015fbb4 00000004 W tinyxml2::XMLUnknown::ToUnknown() const
0015fbb8 00000004 W tinyxml2::XMLElement::ToElement()
0015fbbc 00000004 W tinyxml2::XMLElement::ToElement() const
0015fbc0 00000004 W tinyxml2::XMLDocument::ToDocument()
0015fbc4 00000004 W tinyxml2::XMLDocument::ToDocument() const
0015fbc8 00000008 W tinyxml2::XMLDocument::ShallowClone(tinyxml2::XMLDocument*) const
0015fbd0 00000008 W tinyxml2::XMLDocument::ShallowEqual(tinyxml2::XMLNode const*) const
0015fbd8 00000008 W tinyxml2::XMLPrinter::VisitExit(tinyxml2::XMLDocument const&)
0015fbe0 00000008 W tinyxml2::XMLPrinter::CompactMode(tinyxml2::XMLElement const&)
0015fbe8 00000078 T tinyxml2::XMLDocument::Accept(tinyxml2::XMLVisitor*) const
0015fc60 00000018 T tinyxml2::XMLText::Accept(tinyxml2::XMLVisitor*) const
0015fc78 00000018 T tinyxml2::XMLComment::Accept(tinyxml2::XMLVisitor*) const
0015fc90 00000018 T tinyxml2::XMLDeclaration::Accept(tinyxml2::XMLVisitor*) const
0015fca8 00000018 T tinyxml2::XMLUnknown::Accept(tinyxml2::XMLVisitor*) const
0015fcc0 0000007c T tinyxml2::XMLElement::Accept(tinyxml2::XMLVisitor*) const
0015fd3c 00000008 W tinyxml2::MemPoolT<52>::ItemSize() const
0015fd44 0000001c W tinyxml2::MemPoolT<52>::Free(void*)
0015fd60 00000010 W tinyxml2::MemPoolT<52>::SetTracked()
0015fd70 00000008 W tinyxml2::MemPoolT<56>::ItemSize() const
0015fd78 0000001c W tinyxml2::MemPoolT<56>::Free(void*)
0015fd94 00000010 W tinyxml2::MemPoolT<56>::SetTracked()
0015fda4 00000008 W tinyxml2::MemPoolT<40>::ItemSize() const
0015fdac 0000001c W tinyxml2::MemPoolT<40>::Free(void*)
0015fdc8 00000010 W tinyxml2::MemPoolT<40>::SetTracked()
0015fdd8 00000008 W tinyxml2::MemPoolT<60>::ItemSize() const
0015fde0 0000001c W tinyxml2::MemPoolT<60>::Free(void*)
0015fdfc 00000010 W tinyxml2::MemPoolT<60>::SetTracked()
0015fe0c 00000040 W tinyxml2::XMLPrinter::~XMLPrinter()
0015fe0c 00000040 W tinyxml2::XMLPrinter::~XMLPrinter()
0015fe4c 00000110 W tinyxml2::MemPoolT<40>::Alloc()
0015ff5c 00000118 W tinyxml2::MemPoolT<52>::Alloc()
00160074 00000118 W tinyxml2::MemPoolT<56>::Alloc()
0016018c 00000110 W tinyxml2::MemPoolT<60>::Alloc()
0016029c 00000044 T tinyxml2::XMLPrinter::VisitExit(tinyxml2::XMLElement const&)
001602e0 00000084 t tinyxml2::XMLPrinter::Putc(char) [clone .part.0]
00160364 0000006c W tinyxml2::MemPoolT<60>::~MemPoolT()
00160364 0000006c W tinyxml2::MemPoolT<60>::~MemPoolT()
001603d0 0000006c W tinyxml2::MemPoolT<40>::~MemPoolT()
001603d0 0000006c W tinyxml2::MemPoolT<40>::~MemPoolT()
0016043c 00000074 W tinyxml2::MemPoolT<56>::~MemPoolT()
0016043c 00000074 W tinyxml2::MemPoolT<56>::~MemPoolT()
001604b0 00000074 W tinyxml2::MemPoolT<52>::~MemPoolT()
001604b0 00000074 W tinyxml2::MemPoolT<52>::~MemPoolT()
00160524 00000078 W tinyxml2::MemPoolT<40>::~MemPoolT()
0016059c 00000080 W tinyxml2::MemPoolT<56>::~MemPoolT()
0016061c 00000080 W tinyxml2::MemPoolT<52>::~MemPoolT()
0016069c 00000078 W tinyxml2::MemPoolT<60>::~MemPoolT()
00160714 0000004c W tinyxml2::XMLPrinter::~XMLPrinter()
00160760 00000048 W tinyxml2::XMLAttribute::~XMLAttribute()
00160760 00000048 W tinyxml2::XMLAttribute::~XMLAttribute()
001607a8 00000054 W tinyxml2::XMLAttribute::~XMLAttribute()
001607fc 00000090 T tinyxml2::StrPair::SetStr(char const*, int)
0016088c 000000c4 T tinyxml2::StrPair::ParseText(char*, char const*, int, int*)
00160950 000000e8 T tinyxml2::StrPair::ParseName(char*)
00160a38 000000c4 T tinyxml2::StrPair::CollapseWhitespace()
00160afc 00000100 T tinyxml2::XMLUtil::ConvertUTF32ToUTF8(unsigned long, char*, int*)
00160bfc 0000013c T tinyxml2::XMLUtil::GetCharacterRef(char const*, char*, int*)
00160d38 000001f8 T tinyxml2::StrPair::GetStr()
00160f30 000000b4 T tinyxml2::XMLComment::ShallowEqual(tinyxml2::XMLNode const*) const
00160fe4 000000b4 T tinyxml2::XMLText::ShallowEqual(tinyxml2::XMLNode const*) const
00161098 000000b4 T tinyxml2::XMLDeclaration::ShallowEqual(tinyxml2::XMLNode const*) const
0016114c 000000b4 T tinyxml2::XMLUnknown::ShallowEqual(tinyxml2::XMLNode const*) const
00161200 000001fc T tinyxml2::XMLUnknown::ShallowClone(tinyxml2::XMLDocument*) const
001613fc 000001fc T tinyxml2::XMLComment::ShallowClone(tinyxml2::XMLDocument*) const
001615f8 0000020c T tinyxml2::XMLText::ShallowClone(tinyxml2::XMLDocument*) const
00161804 00000114 T tinyxml2::XMLElement::ShallowEqual(tinyxml2::XMLNode const*) const
00161918 00000c74 T tinyxml2::XMLDocument::Identify(char*, tinyxml2::XMLNode**)
0016258c 00000030 T tinyxml2::XMLNode::Value() const
001625bc 00000070 T tinyxml2::XMLNode::ToElementWithName(char const*) const
0016262c 0000003c T tinyxml2::XMLNode::FirstChildElement(char const*) const
00162668 0000003c T tinyxml2::XMLNode::NextSiblingElement(char const*) const
001626a4 00000114 T tinyxml2::XMLAttribute::ParseDeep(char*, bool, int*)
001627b8 0000000c T tinyxml2::XMLAttribute::SetAttribute(char const*)
001627c4 0000003c T tinyxml2::XMLAttribute::SetAttribute(unsigned int)
00162800 0000008c T tinyxml2::XMLElement::Attribute(char const*, char const*) const
0016288c 00000058 T tinyxml2::XMLElement::GetText() const
001628e4 00000080 T tinyxml2::XMLElement::DeleteAttribute(tinyxml2::XMLAttribute*)
00162964 0000017c T tinyxml2::XMLElement::CreateAttribute()
00162ae0 0000009c T tinyxml2::XMLElement::FindOrCreateAttribute(char const*)
00162b7c 00000254 T tinyxml2::XMLElement::ShallowClone(tinyxml2::XMLDocument*) const
00162dd0 00000148 T tinyxml2::XMLDocument::XMLDocument(bool, tinyxml2::Whitespace)
00162dd0 00000148 T tinyxml2::XMLDocument::XMLDocument(bool, tinyxml2::Whitespace)
00162f18 00000058 T tinyxml2::XMLDocument::MarkInUse(tinyxml2::XMLNode const*)
00162f70 0000005c T tinyxml2::XMLNode::DeleteNode(tinyxml2::XMLNode*)
00162fcc 000000e8 T tinyxml2::XMLNode::~XMLNode()
00162fcc 000000e8 T tinyxml2::XMLNode::~XMLNode()
001630b4 00000020 W tinyxml2::XMLText::~XMLText()
001630b4 00000020 W tinyxml2::XMLText::~XMLText()
001630d4 0000002c W tinyxml2::XMLText::~XMLText()
00163100 00000020 T tinyxml2::XMLComment::~XMLComment()
00163100 00000020 T tinyxml2::XMLComment::~XMLComment()
00163120 0000002c T tinyxml2::XMLComment::~XMLComment()
0016314c 00000020 T tinyxml2::XMLDeclaration::~XMLDeclaration()
0016314c 00000020 T tinyxml2::XMLDeclaration::~XMLDeclaration()
0016316c 0000002c T tinyxml2::XMLDeclaration::~XMLDeclaration()
00163198 00000020 T tinyxml2::XMLUnknown::~XMLUnknown()
00163198 00000020 T tinyxml2::XMLUnknown::~XMLUnknown()
001631b8 0000002c T tinyxml2::XMLUnknown::~XMLUnknown()
001631e4 00000048 T tinyxml2::XMLElement::~XMLElement()
001631e4 00000048 T tinyxml2::XMLElement::~XMLElement()
0016322c 00000054 T tinyxml2::XMLElement::~XMLElement()
00163280 000000b4 t tinyxml2::XMLNode::InsertEndChild(tinyxml2::XMLNode*) [clone .part.0]
00163334 00000208 T tinyxml2::XMLElement::InsertNewChildElement(char const*)
0016353c 00000210 T tinyxml2::XMLElement::InsertNewText(char const*)
0016374c 000000c8 T tinyxml2::XMLNode::InsertEndChild(tinyxml2::XMLNode*)
00163814 000001f4 T tinyxml2::XMLDocument::NewElement(char const*)
00163a08 000001fc T tinyxml2::XMLDocument::NewText(char const*)
00163c04 0000010c T tinyxml2::XMLElement::SetText(char const*)
00163d10 00000204 T tinyxml2::XMLDocument::NewDeclaration(char const*)
00163f14 00000040 T tinyxml2::XMLDeclaration::ShallowClone(tinyxml2::XMLDocument*) const
00163f54 000000f4 T tinyxml2::XMLDocument::SetError(tinyxml2::XMLError, int, char const*, ...)
00164048 000000c8 T tinyxml2::XMLText::ParseDeep(char*, tinyxml2::StrPair*, int*)
00164110 0000005c T tinyxml2::XMLComment::ParseDeep(char*, tinyxml2::StrPair*, int*)
0016416c 0000005c T tinyxml2::XMLDeclaration::ParseDeep(char*, tinyxml2::StrPair*, int*)
001641c8 0000005c T tinyxml2::XMLUnknown::ParseDeep(char*, tinyxml2::StrPair*, int*)
00164224 00000148 T tinyxml2::XMLDocument::Clear()
0016436c 000001dc T tinyxml2::XMLDocument::~XMLDocument()
0016436c 000001dc T tinyxml2::XMLDocument::~XMLDocument()
00164548 00000020 T tinyxml2::XMLDocument::~XMLDocument()
00164568 00000224 T tinyxml2::XMLElement::ParseAttributes(char*, int*)
0016478c 000003d4 T tinyxml2::XMLNode::ParseDeep(char*, tinyxml2::StrPair*, int*)
00164b60 000000d8 T tinyxml2::XMLElement::ParseDeep(char*, tinyxml2::StrPair*, int*)
00164c38 000000d4 T tinyxml2::XMLDocument::Parse()
00164d0c 000000f8 T tinyxml2::XMLDocument::LoadFile(__sFILE*)
00164e04 00000098 T tinyxml2::XMLDocument::LoadFile(char const*)
00164e9c 000000a8 T tinyxml2::XMLPrinter::XMLPrinter(__sFILE*, bool, int)
00164e9c 000000a8 T tinyxml2::XMLPrinter::XMLPrinter(__sFILE*, bool, int)
00164f44 000000c4 T tinyxml2::XMLPrinter::Write(char const*, unsigned int)
00165008 00000160 t tinyxml2::XMLPrinter::PrintString(char const*, bool) [clone .part.0]
00165168 0000003c T tinyxml2::XMLPrinter::PrintSpace(int)
001651a4 00000038 T tinyxml2::XMLPrinter::VisitEnter(tinyxml2::XMLDocument const&)
001651dc 0000017c T tinyxml2::XMLPrinter::CloseElement(bool)
00165358 00000108 T tinyxml2::XMLDocument::Print(tinyxml2::XMLPrinter*) const
00165460 00000084 T tinyxml2::XMLDocument::SaveFile(__sFILE*, bool)
001654e4 0000009c T tinyxml2::XMLDocument::SaveFile(char const*, bool)
00165580 000001a8 T tinyxml2::XMLPrinter::OpenElement(char const*, bool)
00165728 000000c4 T tinyxml2::XMLPrinter::PushAttribute(char const*, char const*)
001657ec 000000e4 T tinyxml2::XMLPrinter::VisitEnter(tinyxml2::XMLElement const&, tinyxml2::XMLAttribute const*)
001658d0 000000dc T tinyxml2::XMLPrinter::PushText(char const*, bool)
001659ac 00000048 T tinyxml2::XMLPrinter::Visit(tinyxml2::XMLText const&)
001659f4 00000140 T tinyxml2::XMLPrinter::PushComment(char const*)
00165b34 00000044 T tinyxml2::XMLPrinter::Visit(tinyxml2::XMLComment const&)
00165b78 00000140 T tinyxml2::XMLPrinter::PushDeclaration(char const*)
00165cb8 00000044 T tinyxml2::XMLPrinter::Visit(tinyxml2::XMLDeclaration const&)
00165cfc 00000150 T tinyxml2::XMLPrinter::PushUnknown(char const*)
00165e4c 00000044 T tinyxml2::XMLPrinter::Visit(tinyxml2::XMLUnknown const&)
00165e90 00000184 T RemoveLineBreaks(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00166014 00000008 t romfs_close
0016601c 000000c8 t romfs_seek
001660e4 00000024 t romfs_dirreset
00166108 000000c8 t fill_dir
001661d0 000002b0 t romfs_dirnext
00166480 00000084 t romfs_free
00166504 000000d4 t searchForFile.constprop.0
001665d8 000000d8 t searchForDir.constprop.0
001666b0 000001c0 t navigateToDir.constprop.0
00166870 00000128 t romfs_open
00166998 0000004c t romfs_chdir
001669e4 00000070 t romfs_diropen
00166a54 0000017c t romfs_stat
00166bd0 00000008 t romfs_dirclose
00166bd8 0000007c t romfs_fstat
00166c54 000000d4 t romfs_read
00166d28 00000290 T romfsMountFromFile
00166fb8 00000098 T romfsMountFromCurrentProcess
00167050 0000025c T romfsMountSelf
001672ac 00000018 T consoleSelect
001672c4 00000178 T consoleDrawChar
0016743c 00000124 T consolePrintChar
00167560 00000a00 T con_write
00167f60 00000168 T consoleInit
001680c8 000000f4 t newRow
001681bc 0000000c T consoleClear
001681c8 000000d0 t gfxPresentFramebuffer
00168298 0000001c T gfxIsWide
001682b4 000000ec T gfxSetScreenFormat
001683a0 00000010 T gfxSetDoubleBuffering
001683b0 00000108 T gfxInit
001684b8 00000010 T gfxInitDefault
001684c8 000000b4 T gfxExit
0016857c 000000a0 T gfxGetFramebuffer
0016861c 0000010c T gfxFlushBuffers
00168728 00000050 T gfxSwapBuffers
00168778 00000050 T gfxSwapBuffersGpu
001687c8 00000c58 t gspHardwareInit
00169420 00000254 T gspInit
00169674 000000f0 T gspExit
00169764 00000010 T gspHasGpuRight
00169774 00000098 T gspPresentBuffer
0016980c 00000050 T gspWaitForEvent
0016985c 00000004 W gxCmdQueueInterrupt
00169860 00000160 t gspEventThreadMain
001699c0 00000050 T GSPGPU_FlushDataCache
00169a10 00000034 T GSPGPU_SetLcdForceBlack
00169a44 00000068 T GSPGPU_AcquireRight
00169aac 00000048 T GSPGPU_ReleaseRight
00169af4 0000007c T GSPGPU_ImportDisplayCaptureInfo
00169b70 0000002c T GSPGPU_SaveVramSysArea
00169b9c 0000002c T GSPGPU_RestoreVramSysArea
00169bc8 000001b0 t aptConvertScreenForCapture
00169d78 00000008 W aptDspSleep
00169d80 00000004 W aptDspWakeup
00169d84 00000004 W aptDspCancel
00169d88 0000015c T aptSendCommand
00169ee4 00000038 t aptExitProcess
00169f1c 00000050 T aptSetChainloader
00169f6c 000002f0 T aptExit
0016a25c 000000d8 T aptHandleSleep
0016a334 0000001c T aptSetMessageCallback
0016a350 00000084 T APT_SleepIfShellClosed
0016a3d4 00000084 T aptSetSleepAllowed
0016a458 00000084 T APT_UnlockTransition
0016a4e0 00000484 t aptEventHandler
0016a964 000000b0 T APT_ReceiveParameter
0016aa14 000000b0 t aptReceiveParameter.constprop.0
0016aac8 000002bc t aptScreenTransfer
0016ad84 000002d0 t aptWaitForWakeUp.isra.0
0016b054 00000118 T aptLaunchLibraryApplet
0016b16c 000000f8 T aptJumpToHomeMenu
0016b264 0000004c T aptMainLoop
0016b2b0 00000234 T aptInit
0016b4e4 0000005c T APT_SendParameter
0016b540 0000007c T APT_CheckNew3DS
0016b5bc 00000024 W hidShouldUseIrrst
0016b5e0 0000018c T hidInit
0016b76c 000000e8 T hidExit
0016b854 00000294 T hidScanInput
0016bae8 00000010 T hidKeysHeld
0016baf8 00000010 T hidKeysDown
0016bb08 000000c8 T fsInit
0016bbd0 0000003c T fsExit
0016bc0c 00000060 T fsExemptFromSession
0016bc6c 00000050 T fsUnexemptFromSession
0016bcbc 00000084 T fsMakePath
0016bd40 000000cc T FSUSER_OpenFile
0016be0c 000000d4 T FSUSER_OpenFileDirectly
0016bee0 000000bc T FSUSER_DeleteFile
0016bf9c 000000f8 T FSUSER_RenameFile
0016c094 000000bc T FSUSER_DeleteDirectory
0016c150 000000d4 T FSUSER_CreateFile
0016c224 000000c4 T FSUSER_CreateDirectory
0016c2e8 000000f8 T FSUSER_RenameDirectory
0016c3e0 000000b4 T FSUSER_OpenDirectory
0016c494 00000094 T FSUSER_OpenArchive
0016c528 0000008c T FSUSER_CloseArchive
0016c5b4 00000074 T FSUSER_GetSdmcArchiveResource
0016c628 00000064 T FSUSER_IsSdmcWritable
0016c68c 00000058 T FSFILE_Read
0016c6e4 00000060 T FSFILE_Write
0016c744 00000038 T FSFILE_GetSize
0016c77c 00000028 T FSFILE_SetSize
0016c7a4 0000003c T FSFILE_Close
0016c7e0 00000024 T FSFILE_Flush
0016c804 00000050 T FSDIR_Read
0016c854 0000003c T FSDIR_Close
0016c890 00000178 t swkbdMessageCallback
0016ca08 00000078 T swkbdInit
0016ca80 0000003c T swkbdSetFeatures
0016cabc 00000050 T swkbdSetHintText
0016cb0c 0000006c T swkbdSetButton
0016cb78 000003ac T swkbdInputText
0016cf24 000000e8 T utf16_to_utf8
0016d00c 00000064 T decode_utf16
0016d070 000000c0 T utf8_to_utf16
0016d130 00000038 W __libctru_init
0016d168 000000f0 W __system_initArgv
0016d258 T svcControlMemory
0016d278 T svcQueryMemory
0016d2a8 T svcExitProcess
0016d2b0 T svcCreateThread
0016d2d0 T svcExitThread
0016d2d8 T svcSleepThread
0016d2e0 T svcReleaseMutex
0016d2e8 T svcCreateEvent
0016d2fc T svcSignalEvent
0016d304 T svcClearEvent
0016d30c T svcCreateMemoryBlock
0016d324 T svcMapMemoryBlock
0016d32c T svcUnmapMemoryBlock
0016d334 T svcCreateAddressArbiter
0016d348 T svcArbitrateAddressNoTimeout
0016d350 T svcCloseHandle
0016d358 T svcWaitSynchronization
0016d360 T svcWaitSynchronizationN
0016d388 T svcDuplicateHandle
0016d39c T svcGetSystemTick
0016d3a4 T svcConnectToPort
0016d3b8 T svcSendSyncRequest
0016d3c0 T svcGetResourceLimit
0016d3d4 T svcGetResourceLimitLimitValues
0016d3dc T svcGetResourceLimitCurrentValues
0016d3e4 T svcBreak
0016d3ec T svcOutputDebugString
0016d3f4 W initSystem
0016d444 W __ctru_exit
0016d45c T __aeabi_read_tp
0016d468 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0016d48c 00000004 t addrMapNodeDestructor(rbtree_node*)
0016d490 00000114 T vramMemAlign
0016d5a4 00000008 T vramAlloc
0016d5ac 0000005c T vramFree
0016d608 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0016d62c 00000004 t addrMapNodeDestructor(rbtree_node*)
0016d630 00000120 T linearMemAlign
0016d750 00000008 T linearAlloc
0016d758 0000005c T linearFree
0016d7b4 00000084 T MemPool::CoalesceRight(MemBlock*)
0016d838 00000170 T MemPool::Allocate(MemChunk&, unsigned long, int)
0016d9a8 000000fc T MemPool::Deallocate(MemChunk const&)
0016daa4 0000000c T __sync_init
0016dab0 00000018 T __sync_fini
0016dac8 0000002c T syncArbitrateAddress
0016daf4 0000001c T LightLock_Init
0016db10 00000094 T LightLock_Lock
0016dba4 00000044 T LightLock_TryLock
0016dbe8 00000040 T LightLock_Unlock
0016dc28 00000024 T RecursiveLock_Init
0016dc4c 00000030 T RecursiveLock_Lock
0016dc7c 00000078 T RecursiveLock_TryLock
0016dcf4 00000054 T RecursiveLock_Unlock
0016dd48 00000040 T LightEvent_Init
0016dd88 000000a4 T LightEvent_Clear
0016de2c 000000c8 T LightEvent_Signal
0016def4 00000058 T LightEvent_TryWait
0016df4c 000000b0 T LightEvent_Wait
0016dffc 00000084 W envGetHandle
0016e080 00000050 W envDestroyHandles
0016e0d0 00000054 T osGetTimeRef
0016e124 000000e4 T osGetTime
0016e208 00000074 T __libctru_gtod
0016e27c 00000034 T __ctru_speedup_config
0016e2b0 00000124 T srvInit
0016e3d4 00000058 T srvExit
0016e42c 00000080 T srvGetServiceHandleDirect
0016e4ac 00000048 T srvGetServiceHandle
0016e4f4 00000038 T srvPublishToSubscriber
0016e52c 00000188 T threadCreate
0016e6b4 0000002c T threadFree
0016e6e0 00000024 T threadJoin
0016e704 00000030 T threadGetCurrent
0016e734 00000040 T threadExit
0016e774 00000044 t _thread_begin
0016e7b8 00000094 t mappableFindAddressWithin
0016e84c 00000028 T mappableInit
0016e874 00000080 T mappableAlloc
0016e8f4 00000004 T mappableFree
0016e8f8 00000160 T irrstInit
0016ea58 000000cc T irrstExit
0016eb24 000000b0 T irrstScanInput
0016ebd4 00000024 T irrstKeysHeld
0016ebf8 0000000c T srvPmGetSessionHandle
0016ec04 00000074 T ptmSysmInit
0016ec78 0000003c T ptmSysmExit
0016ecb4 00000034 T PTMSYSM_ConfigureNew3DSCPU
0016ece8 00000010 T rbtree_init
0016ecf8 000001a0 t do_insert
0016ee98 00000008 T rbtree_insert
0016eea0 00000090 T rbtree_rotate
0016ef30 00000338 T rbtree_remove
0016f268 00000074 T rbtree_find
0016f2dc 00000060 T encode_utf16
0016f33c 000000fc T encode_utf8
0016f438 0000013c T decode_utf8
0016f574 00000030 W __appInit
0016f5a4 00000030 t __libctru_nanosleep
0016f5d4 00000030 t __libctru_get_reent
0016f604 000000f8 T __system_initSyscalls
0016f700 000001e0 W __system_allocateHeaps
0016f8e0 00000030 W __appExit
0016f910 00000090 W __libctru_exit
0016f9a0 00000014 t archive_link
0016f9b4 00000014 t archive_dirreset
0016f9c8 00000014 t archive_chmod
0016f9dc 00000024 t error_cmp
0016fa00 00000050 t archive_translate_error
0016fa50 000000d4 t archive_seek
0016fb24 0000007c t _archiveInit.part.0
0016fba0 0000008c t archiveFindDevice.part.0
0016fc2c 00000294 t archive_utf16path
0016fec0 000000a0 t _archiveUnmountDeviceStruct.part.0
0016ff60 00000014 t archive_fchmod
0016ff74 00000014 t archive_statvfs
0016ff88 00000158 t _archiveMountDevice
001700e0 000000e8 t archive_diropen
001701c8 000000a4 t archive_fstat
0017026c 0000006c t archive_close
001702d8 0000006c t archive_fsync
00170344 00000070 t archive_dirclose
001703b4 000000e8 t sdmc_statvfs
0017049c 00000080 t archive_ftruncate
0017051c 000000fc t archive_chdir
00170618 000000b0 t archive_read
001706c8 000000ac t archive_unlink
00170774 000000c8 t archive_rmdir
0017083c 000000ec t archive_mkdir
00170928 000001a8 t archive_stat
00170ad0 00000184 t archive_rename
00170c54 00000168 t archive_dirnext
00170dbc 0000012c t archive_write
00170ee8 000001f0 t archive_open
001710d8 000001a4 T archiveMountSdmc
0017127c 00000054 T archiveUnmountAll
001712d0 00000050 T rbtree_node_next
00171320 00000004 T operator delete(void*, unsigned int)
00171324 00000004 T operator delete[](void*)
00171328 000000a4 T std::_Hash_bytes(void const*, unsigned int, unsigned int)
001713cc 00000014 T std::get_new_handler()
001713e0 0000005c T operator new(unsigned int)
0017143c 0000001c T operator new(unsigned int, std::nothrow_t const&)
00171458 00000004 T operator new[](unsigned int)
0017145c 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
001714e4 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
001714e8 000000a4 t _GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj
0017158c 000000a4 t _GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEj
00171630 0000002c T std::__throw_bad_alloc()
0017165c 0000002c T std::__throw_bad_array_new_length()
00171688 00000048 T std::__throw_logic_error(char const*)
001716d0 00000048 T std::__throw_invalid_argument(char const*)
00171718 00000048 T std::__throw_length_error(char const*)
00171760 00000048 T std::__throw_out_of_range(char const*)
001717a8 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
00171824 00000048 T std::__throw_runtime_error(char const*)
0017186c 000000d0 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
00171940 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
00171a20 000000f4 t _GLOBAL__sub_I__ZNSt12ctype_bynameIcEC2ERKSsj
00171b14 00000034 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
00171b48 000000b0 T std::random_device::_M_init_pretr1(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00171bf8 00000004 T std::random_device::_M_init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00171bfc 000000c0 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
00171cbc 00000058 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00171d14 0000000c T std::random_device::_M_getval()
00171d20 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
00171d90 00000080 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
00171e10 0000012c T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
00171f3c 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
00171f94 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00171fa8 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0017202c 000000bc W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001720e8 00000100 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
001721e8 0000009c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00172284 00000124 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
001723a8 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned int, char)
001723f8 0000028c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
00172684 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
00172714 000000a4 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
001727b8 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
00172830 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char, unsigned int) const
00172874 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
001728c8 000000f4 t _GLOBAL__sub_I__ZNSt12ctype_bynameIwEC2ERKSsj
001729bc 00000004 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
001729bc 00000004 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
001729c0 00000018 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
001729d8 00000008 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
001729e0 00000038 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
00172a18 0000007c W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
00172a94 00000050 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>::_M_release()
00172ae4 0000052c W std::filesystem::__cxx11::_Dir::advance(bool, std::error_code&)
00173010 00000080 W std::filesystem::__cxx11::_Dir::~_Dir()
00173010 00000080 W std::filesystem::__cxx11::_Dir::~_Dir()
00173090 0000000c T std::filesystem::__cxx11::directory_iterator::operator*() const
0017309c 00000020 W std::unique_ptr<std::filesystem::__cxx11::path::_List::_Impl, std::filesystem::__cxx11::path::_List::_Impl_deleter>::~unique_ptr()
0017309c 00000020 W std::unique_ptr<std::filesystem::__cxx11::path::_List::_Impl, std::filesystem::__cxx11::path::_List::_Impl_deleter>::~unique_ptr()
001730bc 000003f4 T std::filesystem::__cxx11::directory_iterator::directory_iterator(std::filesystem::__cxx11::path const&, std::filesystem::directory_options, std::error_code*)
001730bc 000003f4 T std::filesystem::__cxx11::directory_iterator::directory_iterator(std::filesystem::__cxx11::path const&, std::filesystem::directory_options, std::error_code*)
001734b0 00000184 T std::filesystem::__cxx11::directory_iterator::operator++()
00173634 0000000c T std::filesystem::__cxx11::filesystem_error::what() const
00173640 00000004 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
00173640 00000004 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
00173644 00000018 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>::~_Sp_counted_ptr_inplace()
0017365c 00000038 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>::_M_get_deleter(std::type_info const&)
00173694 00000008 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>::_M_destroy()
0017369c 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0017374c 00000078 T std::filesystem::__cxx11::filesystem_error::~filesystem_error()
0017374c 00000078 T std::filesystem::__cxx11::filesystem_error::~filesystem_error()
001737c4 00000084 T std::filesystem::__cxx11::filesystem_error::~filesystem_error()
00173848 00000260 W std::system_error::system_error(std::error_code, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00173848 00000260 W std::system_error::system_error(std::error_code, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00173aa8 00000078 T std::filesystem::__cxx11::path::_List::_Impl_deleter::operator()(std::filesystem::__cxx11::path::_List::_Impl*) const
00173b20 00000080 W std::filesystem::__cxx11::path::_List::_Impl::_M_erase_from(std::filesystem::__cxx11::path::_Cmpt const*)
00173ba0 00000040 W std::filesystem::__cxx11::path::_Cmpt::~_Cmpt()
00173ba0 00000040 W std::filesystem::__cxx11::path::_Cmpt::~_Cmpt()
00173be0 00000088 W std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>::_M_dispose()
00173c68 0000000c T std::filesystem::__cxx11::path::_List::_List()
00173c68 0000000c T std::filesystem::__cxx11::path::_List::_List()
00173c74 00000068 W std::filesystem::__cxx11::path::_List::clear()
00173cdc 00000064 T std::filesystem::__cxx11::path::has_filename() const
00173d40 000000c0 T std::filesystem::__cxx11::path::_M_find_extension() const
00173e00 00000554 T std::filesystem::__cxx11::path::_M_split_cmpts()
00174358 00000168 T std::filesystem::__cxx11::path::_List::reserve(int, bool)
001744c0 000003e8 W std::filesystem::__cxx11::filesystem_error::_Impl::make_what(std::basic_string_view<char, std::char_traits<char> >, std::filesystem::__cxx11::path const*, std::filesystem::__cxx11::path const*)
001748a8 00000090 T std::filesystem::__cxx11::path::_List::_List(std::filesystem::__cxx11::path::_List const&)
001748a8 00000090 T std::filesystem::__cxx11::path::_List::_List(std::filesystem::__cxx11::path::_List const&)
00174938 0000018c W std::filesystem::__cxx11::path::_List::_Impl::copy() const
00174ac4 000003d8 T std::filesystem::__cxx11::path::_List::operator=(std::filesystem::__cxx11::path::_List const&)
00174e9c 0000003c T std::filesystem::__cxx11::path::operator=(std::filesystem::__cxx11::path const&)
00174ed8 000009ec T std::filesystem::__cxx11::path::_M_append(std::basic_string_view<char, std::char_traits<char> >)
001758c4 00000024 W std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0> > >::~__allocated_ptr()
001758c4 00000024 W std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0> > >::~__allocated_ptr()
001758e8 000001d0 T std::filesystem::__cxx11::filesystem_error::filesystem_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::error_code)
001758e8 000001d0 T std::filesystem::__cxx11::filesystem_error::filesystem_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::error_code)
00175ab8 000001c0 T std::filesystem::__cxx11::filesystem_error::filesystem_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::filesystem::__cxx11::path const&, std::error_code)
00175ab8 000001c0 T std::filesystem::__cxx11::filesystem_error::filesystem_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::filesystem::__cxx11::path const&, std::error_code)
00175c78 0000000c T std::bad_alloc::what() const
00175c84 00000020 T std::bad_alloc::~bad_alloc()
00175c84 00000020 T std::bad_alloc::~bad_alloc()
00175ca4 0000002c T std::bad_alloc::~bad_alloc()
00175cd0 0000000c T std::bad_array_new_length::what() const
00175cdc 00000020 T std::bad_array_new_length::~bad_array_new_length()
00175cdc 00000020 T std::bad_array_new_length::~bad_array_new_length()
00175cfc 0000002c T std::bad_array_new_length::~bad_array_new_length()
00175d28 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00175d84 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00175d98 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00175d98 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00175db8 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00175de4 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00175e4c 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00175e78 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00175ebc 00000004 T operator delete(void*)
00175ec0 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00175f90 00000098 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
00176028 00000044 T __cxa_allocate_exception
0017606c 00000030 T __cxa_free_exception
0017609c 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
001760dc T __cxa_end_cleanup
001760ec 00000134 T __cxa_type_match
00176220 000000b4 T __cxa_begin_cleanup
001762d4 000000b4 T __gnu_end_cleanup
00176388 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
001763f8 0000002c T __cxa_call_terminate
00176424 00000154 T __cxa_call_unexpected
00176578 000000cc T __cxa_begin_catch
00176644 000000e0 T __cxa_end_catch
00176724 00000004 T std::exception::~exception()
00176724 00000004 T std::exception::~exception()
00176728 00000004 T std::bad_exception::~bad_exception()
00176728 00000004 T std::bad_exception::~bad_exception()
0017672c 0000000c T transaction clone for std::bad_exception::what() const
0017672c 0000000c T std::bad_exception::what() const
00176738 00000018 T std::bad_exception::~bad_exception()
00176750 0000000c T __cxa_get_globals_fast
0017675c 0000000c T __cxa_get_globals
00176768 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
001768d4 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*)
00176934 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00176a0c 000006f8 T __gxx_personality_v0
00177104 00000014 T __cxxabiv1::__terminate(void (*)())
00177118 00000018 T std::terminate()
00177130 0000000c T __cxxabiv1::__unexpected(void (*)())
0017713c 00000018 T std::unexpected()
00177154 00000014 T std::get_terminate()
00177168 00000014 T std::get_unexpected()
0017717c 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
001771ec 00000070 T __cxa_init_primary_exception
0017725c 00000058 T __cxa_throw
001772b4 000000b0 T __cxa_rethrow
00177364 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00177364 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00177384 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
001773b0 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0017741c 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001774f8 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0017753c 00000004 T std::type_info::~type_info()
0017753c 00000004 T std::type_info::~type_info()
00177540 00000008 T std::type_info::__is_pointer_p() const
00177540 00000008 T std::type_info::__is_function_p() const
00177548 0000004c T std::type_info::operator==(std::type_info const&) const
00177594 00000008 T std::logic_error::what() const
00177594 00000008 T std::runtime_error::what() const
0017759c 00000064 T std::runtime_error::~runtime_error()
0017759c 00000064 T std::runtime_error::~runtime_error()
00177600 00000064 T std::logic_error::~logic_error()
00177600 00000064 T std::logic_error::~logic_error()
00177664 0000006c T std::runtime_error::~runtime_error()
001776d0 00000064 T std::length_error::~length_error()
001776d0 00000064 T std::length_error::~length_error()
00177734 00000064 T std::out_of_range::~out_of_range()
00177734 00000064 T std::out_of_range::~out_of_range()
00177798 00000064 T std::invalid_argument::~invalid_argument()
00177798 00000064 T std::invalid_argument::~invalid_argument()
001777fc 0000006c T std::logic_error::~logic_error()
00177868 0000006c T std::out_of_range::~out_of_range()
001778d4 0000006c T std::invalid_argument::~invalid_argument()
00177940 0000006c T std::length_error::~length_error()
001779ac 000000d4 T std::logic_error::logic_error(char const*)
001779ac 000000d4 T std::logic_error::logic_error(char const*)
00177a80 00000020 T std::invalid_argument::invalid_argument(char const*)
00177a80 00000020 T std::invalid_argument::invalid_argument(char const*)
00177aa0 00000020 T std::length_error::length_error(char const*)
00177aa0 00000020 T std::length_error::length_error(char const*)
00177ac0 00000020 T std::out_of_range::out_of_range(char const*)
00177ac0 00000020 T std::out_of_range::out_of_range(char const*)
00177ae0 000000d4 T std::runtime_error::runtime_error(char const*)
00177ae0 000000d4 T std::runtime_error::runtime_error(char const*)
00177bb4 000000bc T std::__cow_string::__cow_string(char const*, unsigned int)
00177bb4 000000bc T std::__cow_string::__cow_string(char const*, unsigned int)
00177c70 00000030 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00177c70 00000030 T std::runtime_error::runtime_error(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00177ca0 0000000c t (anonymous namespace)::generic_error_category::name() const
00177cac 0000000c t (anonymous namespace)::system_error_category::name() const
00177cb8 000000c4 t (anonymous namespace)::system_error_category::default_error_condition(int) const
00177d7c 0000000c T std::_V2::error_category::default_error_condition(int) const
00177d88 00000054 T std::_V2::error_category::equivalent(int, std::error_condition const&) const
00177ddc 00000020 T std::_V2::error_category::equivalent(std::error_code const&, int) const
00177dfc 00000004 t (anonymous namespace)::system_error_category::~system_error_category()
00177dfc 00000004 t (anonymous namespace)::system_error_category::~system_error_category()
00177e00 00000004 t (anonymous namespace)::generic_error_category::~generic_error_category()
00177e00 00000004 t (anonymous namespace)::generic_error_category::~generic_error_category()
00177e04 00000014 t (anonymous namespace)::system_error_category::~system_error_category()
00177e18 00000014 t (anonymous namespace)::generic_error_category::~generic_error_category()
00177e2c 00000020 T std::system_error::~system_error()
00177e2c 00000020 T std::system_error::~system_error()
00177e4c 00000028 T std::system_error::~system_error()
00177e74 00000060 T std::_V2::error_category::_M_message[abi:cxx11](int) const
00177ed4 000000b4 t (anonymous namespace)::system_error_category::message[abi:cxx11](int) const
00177ed4 000000b4 t (anonymous namespace)::generic_error_category::message[abi:cxx11](int) const
00177f88 0000000c T std::_V2::system_category()
00177f94 0000000c T std::_V2::generic_category()
00177fa0 00000174 T floor
00178114 00000120 T __udivmoddi4
00178234 00000018 t selfrel_offset31
0017824c 00000090 t search_EIT_table
001782dc 00000040 t __gnu_unwind_get_pr_addr
0017831c 00000108 t get_eit_entry
00178424 00000088 t restore_non_core_regs
001784ac 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
001784c0 00000004 t _Unwind_DebugHook
001784c4 00000064 t unwind_phase2
00178528 00000134 t unwind_phase2_forced
0017865c 000000a4 T __gnu_Unwind_RaiseException
00178700 00000028 T __gnu_Unwind_ForcedUnwind
00178728 00000074 T __gnu_Unwind_Resume
0017879c 00000020 T __gnu_Unwind_Resume_or_Rethrow
001787bc 00000004 T _Unwind_Complete
001787c0 00000018 T _Unwind_DeleteException
001787d8 0000005c T _Unwind_VRS_Get
00178834 0000002c t _Unwind_GetGR
00178860 0000005c T _Unwind_VRS_Set
001788bc 0000002c t _Unwind_SetGR
001788e8 000000c0 T __gnu_Unwind_Backtrace
001789a8 0000041c t __gnu_unwind_pr_common
00178dc4 00000008 T __aeabi_unwind_cpp_pr0
00178dcc 00000008 W __aeabi_unwind_cpp_pr1
00178dd4 00000008 W __aeabi_unwind_cpp_pr2
00178ddc 000003f4 T _Unwind_VRS_Pop
001791d0 00000064 t next_unwind_byte
00179234 0000002c t _Unwind_GetGR.constprop.0
00179260 00000004 t unwind_UCB_from_context
00179264 0000040c T __gnu_unwind_execute
00179670 00000048 T __gnu_unwind_frame
001796b8 00000010 T _Unwind_GetRegionStart
001796c8 0000001c T _Unwind_GetLanguageSpecificData
001796e4 00000008 T _Unwind_GetDataRelBase
001796ec 00000008 T _Unwind_GetTextRelBase
001796f4 00000014 T abort
00179708 00000078 T bsearch
00179780 0000000c T __errno
0017978c 00000034 T exit
001797c0 00000160 T _fclose_r
00179920 00000020 T fclose
00179940 00000088 T ferror
001799c8 00000258 T __sflush_r
00179c20 00000094 T _fflush_r
00179cb4 00000038 T fflush
00179cec 000000b4 T fgetc
00179da0 0000000c T _cleanup_r
00179dac 00000184 T __sinit
00179f30 00000134 T __sfp
0017a064 0000000c T __sfp_lock_acquire
0017a070 0000000c T __sfp_lock_release
0017a07c 0000003c T __libc_fini_array
0017a0b8 000000cc T __sflags
0017a184 00000140 T _fopen_r
0017a2c4 00000028 T fopen
0017a2ec 00000094 T fputc
0017a380 000002d4 T _fread_r
0017a654 00000038 T fread
0017a68c 000000f8 T _malloc_trim_r
0017a784 000002e4 T _free_r
0017aa68 0000001c T _fseek_r
0017aa84 00000034 T fseek
0017aab8 00000598 T _fseeko_r
0017b050 00000034 T ftell
0017b084 000001bc T _ftello_r
0017b240 00000068 T _fwalk
0017b2a8 00000070 T _fwalk_reent
0017b318 000000f8 T _fwrite_r
0017b410 00000038 T fwrite
0017b448 0000007c T __libc_init_array
0017b4c4 00000034 T iprintf
0017b4f8 00000018 T isalpha
0017b510 00000018 T isspace
0017b528 00000008 T iswspace
0017b530 00000010 T __locale_mb_cur_max
0017b540 00000138 T __smakebuf_r
0017b678 0000008c T __swhatbuf_r
0017b704 00000028 T memalign
0017b72c 00000150 T _memalign_r
0017b87c 00000020 T malloc
0017b89c 00000020 T free
0017b8bc 000007e0 T _malloc_r
0017c09c 00000068 T _mbrtowc_r
0017c104 000002e4 T __utf8_mbtowc
0017c3e8 000000e0 T memchr
0017c4c8 000000a8 T memcmp
0017c570 0000011c T memcpy
0017c68c 00000154 T memmove
0017c7e0 00000118 T memset
0017c8f8 0000000c T __malloc_lock
0017c904 0000000c T __malloc_unlock
0017c910 00000034 T printf
0017c944 00000024 T putchar
0017c968 000000dc T _putc_r
0017ca44 000000e0 T _puts_r
0017cb24 00000020 T puts
0017cb44 0000001c T srand
0017cb60 00000044 T rand
0017cba4 0000001c t lflush
0017cbc0 000001ac T __srefill_r
0017cd6c 0000002c T rewind
0017cd98 00000050 T __srget_r
0017cde8 00000260 T setvbuf
0017d048 00000098 T _raise_r
0017d0e0 00000020 T raise
0017d100 000000cc T snprintf
0017d1cc 00000064 T sprintf
0017d230 00000074 T sscanf
0017d2a4 00000044 T __sread
0017d2e8 00000008 T __seofread
0017d2f0 00000068 T __swrite
0017d358 00000048 T __sseek
0017d3a0 00000008 T __sclose
0017d3a8 0000012c T strchr
0017d4d4 0000063c T _strerror_r
0017db10 00000028 T strerror
0017db38 0000005c T strlen
0017db94 000000ec T strncat
0017dc80 000000dc T strncmp
0017dd5c 000000c0 T strncpy
0017de1c 00000048 T strnlen
0017de68 00001368 T _strtod_l
0017f1d0 0000000c T _strtod_r
0017f1dc 000001a4 t _strtol_l.part.0
0017f380 0000003c T _strtol_r
0017f3bc 00000058 T strtol
0017f414 000001c4 t _strtoul_l.constprop.0
0017f5d8 00000004 T _strtoul_r
0017f5dc 00000030 T strtoul
0017f60c 00000628 t get_arg
0017fc38 000035b8 T _svfprintf_r
001831f0 00000050 t get_arg
00183240 00002bbc T __ssvfscanf_r
00185dfc 0000003c T time
00185e38 00000008 T _user_strerror
00185e40 00000628 t get_arg
00186468 00000030 T __sprint_r
00186498 0000233c T _vfiprintf_r
001887d4 000000d4 t __sbprintf
001888a8 00000628 t get_arg
00188ed0 00003684 T _vfprintf_r
0018c554 000000d4 t __sbprintf
0018c628 000000a4 T _vsnprintf_r
0018c6cc 00000038 T vsnprintf
0018c704 00000108 T __swbuf_r
0018c80c 00000054 T _wcrtomb_r
0018c860 00000028 T _wcsrtombs_r
0018c888 000000f0 T __utf8_wctomb
0018c978 00000154 T __swsetup_r
0018cacc 00000114 T __call_exitprocs
0018cbe0 000001ac t quorem
0018cd90 000012cc T _dtoa_r
0018e05c 000004c0 T __sfvwrite_r
0018e51c 000000ec t rshift
0018e608 00000904 T __gethex
0018ef0c 0000004c T __match
0018ef58 0000029c T __hexnan
0018f1f4 0000003c T iswspace_l
0018f230 000001d4 t __jp2uc
0018f404 0000009c T _jp2uc_l
0018f4a0 0000000c T _localeconv_r
0018f4ac 00000088 T _Balloc
0018f534 0000001c T _Bfree
0018f550 000000f4 T __multadd
0018f644 00000110 T __s2b
0018f754 00000058 T __hi0bits
0018f7ac 00000094 T __lo0bits
0018f840 000000a4 T __i2b
0018f8e4 00000204 T __multiply
0018fae8 00000120 T __pow5mult
0018fc08 0000013c T __lshift
0018fd44 00000058 T __mcmp
0018fd9c 000001cc T __mdiff
0018ff68 00000074 T __ulp
0018ffdc 000000d0 T __b2d
001900ac 00000124 T __d2b
001901d0 00000078 T __ratio
00190248 00000088 T __copybits
001902d0 0000005c T __any_on
0019032c 00000028 T realloc
00190354 00000558 T _realloc_r
001908ac 000000e4 T __sccl
00190990 0000000c T nanf
001909a0 000000a8 T frexp
00190a48 00000010 T nan
00190a58 000000b8 T stpncpy
00190b10 0000022c t _strtoll_l.constprop.0
00190d3c 00000004 T _strtoll_r
00190d40 00000244 t _strtoull_l.constprop.0
00190f84 00000004 T _strtoull_r
00190f88 00000190 T __ssprint_r
00191118 000000e0 T _sungetc_r
001911f8 0000006c T __ssrefill_r
00191264 000000c8 T _sfread_r
0019132c 000000a8 T __submore
001913d4 00000190 T _wcsnrtombs_l
00191564 0000004c T _wcsnrtombs_r
001915b0 00000054 T __assert_func
00191604 000000bc T _calloc_r
001916c0 00000084 T category
00191744 0000003c T fiprintf
00191780 00000008 t null_write
00191788 00000018 T setDefaultDevice
001917a0 000000c8 T FindDevice
00191868 00000028 T RemoveDevice
00191890 0000009c T AddDevice
0019192c 00000020 T GetDeviceOpTab
0019194c 00000078 T _fstat_r
001919c4 00000014 T _getpid_r
001919d8 00000038 T _gettimeofday_r
00191a10 00000008 T _isatty_r
00191a18 00000014 T _kill_r
00191a2c 00000084 T _lseek_r
00191ab0 000000c8 T _open_r
00191b78 00000080 T _read_r
00191bf8 00000078 T _sbrk_r
00191c70 00000080 T _write_r
00191cf0 00000024 T _exit
00191d14 000001b8 T _concatenate_path
00191ecc 00000160 T chdir
0019202c 00000008 T __flockfile
00192034 00000008 T __funlockfile
0019203c 00000018 T __libc_lock_acquire
00192054 00000018 T __libc_lock_release
0019206c 00000018 T __libc_lock_init_recursive
00192084 00000018 T __libc_lock_acquire_recursive
0019209c 00000018 T __libc_lock_release_recursive
001920b4 00000018 T __libc_lock_close_recursive
001920cc 0000008c T __release_handle
00192158 000000b4 T __alloc_handle
0019220c 0000003c T __get_handle
00192248 000000f4 T _close_r
0019233c 00000068 t __dirnext
001923a4 000000f4 T opendir
00192498 00000090 T closedir
00192528 000000b8 T readdir
001925e0 00000028 T __getreent
00192608 00000038 T __aeabi_d2lz
00192608 00000038 T __fixdfdi
00192640 00000040 T __aeabi_d2ulz
00192640 00000040 T __fixunsdfdi
00192680 00000044 T strrchr
001926c4 T _fini
001932d0 0000002c R Dungeon::dungeonList
00193738 00000044 r JunkPoolItems
0019377c 00000054 r chestItems
001937d0 00000010 r GetBasePath(OptionCategory)::paths
0019398c 00000008 r Cosmetics::RANDOM_CHOICE_STR
00193994 00000008 r Cosmetics::RANDOM_COLOR_STR
0019399c 00000008 r Cosmetics::CUSTOM_COLOR_STR
001939d0 00000014 r Settings::GlitchDifficultyOptions[abi:cxx11](unsigned char)::glitchDifficulties
001939e4 000000e8 r (anonymous namespace)::hashIcons
00193ae8 0000003c r tinyxml2::entities
00193b24 00000050 R vtable for tinyxml2::XMLUnknown
00193b74 00000050 R vtable for tinyxml2::XMLComment
00193bc4 00000050 R vtable for tinyxml2::XMLText
00193c14 00000010 r tinyxml2::XMLUtil::ToBool(char const*, bool*)::TRUE_VALS
00193c24 00000010 r tinyxml2::XMLUtil::ToBool(char const*, bool*)::FALSE_VALS
00193c34 00000050 R vtable for tinyxml2::XMLDeclaration
00193c84 00000050 R vtable for tinyxml2::XMLElement
00193cd4 00000050 R vtable for tinyxml2::XMLNode
00193d24 00000050 R vtable for tinyxml2::XMLDocument
00193d74 0000003c R vtable for tinyxml2::XMLPrinter
00193db0 00000004 r tinyxml2::XMLPrinter::PushHeader(bool, bool)::bom
00194a48 000000c9 V std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
0019840c r .LC25
00198418 r .LC26
001987a4 r .LC63
00198860 r .LC2
00198a0c 000000c9 V std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
00198b6c r .LC13
00198bcc r .LC19
0019dd20 00000010 V vtable for tinyxml2::XMLAttribute
0019dd30 00000020 V vtable for tinyxml2::MemPoolT<60>
0019dd50 00000020 V vtable for tinyxml2::MemPoolT<40>
0019dd70 00000020 V vtable for tinyxml2::MemPoolT<56>
0019dd90 00000020 V vtable for tinyxml2::MemPoolT<52>
0019ddc4 00000070 r romFS_devoptab
0019dea0 00000030 r colorTable
0019ded0 00000070 r dotab_stdout
0019df64 00000008 r morton_x.3
0019df6c 00000008 r morton_y.2
0019df74 00000008 r s_sleepWakeEvents.4
0019df9c 00000014 r swkbdFeatures
0019dfb0 R default_font_bin
0019e7b0 R default_font_bin_end
0019e7e4 00000070 r archive_devoptab
0019e854 00000030 r error_table
0019e884 00000001 R std::nothrow
0019e8a0 00000404 R std::__detail::__prime_list
0019eca4 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
0019ee4c 0000002f V typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)0>
0019ee7c 00000008 V typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)0>
0019ee84 00000018 V typeinfo name for std::_Sp_make_shared_tag
0019ee9c 00000008 V typeinfo for std::_Sp_make_shared_tag
0019eea4 00000034 V typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>
0019eed8 0000000c V typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)0>
0019eee4 0000005f V typeinfo name for std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>
0019ef44 0000000c V typeinfo for std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>
0019ef50 0000001c V vtable for std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::_Dir, std::allocator<std::filesystem::__cxx11::_Dir>, (__gnu_cxx::_Lock_policy)0>
0019ef6c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
0019ef74 0000000d r CSWTCH.141
0019efec 00000072 V typeinfo name for std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>
0019f060 0000000c V typeinfo for std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>
0019f06c 0000001c V vtable for std::_Sp_counted_ptr_inplace<std::filesystem::__cxx11::filesystem_error::_Impl, std::allocator<std::filesystem::__cxx11::filesystem_error::_Impl>, (__gnu_cxx::_Lock_policy)0>
0019f088 00000001 V std::filesystem::__cxx11::path::preferred_separator
0019f08c 0000000c R typeinfo for std::filesystem::__cxx11::filesystem_error
0019f098 0000002b R typeinfo name for std::filesystem::__cxx11::filesystem_error
0019f0c4 00000014 R vtable for std::filesystem::__cxx11::filesystem_error
0019f0e8 0000000c R typeinfo for std::bad_alloc
0019f0f4 0000000d R typeinfo name for std::bad_alloc
0019f104 00000014 R vtable for std::bad_alloc
0019f134 0000000c R typeinfo for std::bad_array_new_length
0019f140 00000019 R typeinfo name for std::bad_array_new_length
0019f15c 00000014 R vtable for std::bad_array_new_length
0019f170 0000000c R typeinfo for __cxxabiv1::__class_type_info
0019f17c 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0019f1a0 0000002c R vtable for __cxxabiv1::__class_type_info
0019f1e0 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0019f1e8 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0019f1f0 0000000c R typeinfo for std::bad_exception
0019f1fc 00000008 R typeinfo for std::exception
0019f204 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0019f224 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0019f248 00000012 R typeinfo name for std::bad_exception
0019f25c 0000000d R typeinfo name for std::exception
0019f26c 00000014 R vtable for std::bad_exception
0019f280 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0019f28c 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0019f2b4 0000002c R vtable for __cxxabiv1::__si_class_type_info
0019f2e0 00000008 R typeinfo for std::type_info
0019f2e8 0000000d R typeinfo name for std::type_info
0019f2f8 0000000c R typeinfo for std::logic_error
0019f304 0000000c R typeinfo for std::length_error
0019f310 0000000c R typeinfo for std::out_of_range
0019f31c 0000000c R typeinfo for std::runtime_error
0019f328 0000000c R typeinfo for std::invalid_argument
0019f334 00000010 R typeinfo name for std::logic_error
0019f344 00000011 R typeinfo name for std::length_error
0019f358 00000011 R typeinfo name for std::out_of_range
0019f36c 00000012 R typeinfo name for std::runtime_error
0019f380 00000015 R typeinfo name for std::invalid_argument
0019f398 00000014 R vtable for std::logic_error
0019f3ac 00000014 R vtable for std::length_error
0019f3c0 00000014 R vtable for std::out_of_range
0019f3d4 00000014 R vtable for std::runtime_error
0019f3e8 00000014 R vtable for std::invalid_argument
0019f438 0000000c r typeinfo for (anonymous namespace)::system_error_category
0019f444 0000000c r typeinfo for (anonymous namespace)::generic_error_category
0019f450 00000008 R typeinfo for std::_V2::error_category
0019f458 0000000c R typeinfo for std::system_error
0019f464 00000029 r typeinfo name for (anonymous namespace)::system_error_category
0019f490 0000002a r typeinfo name for (anonymous namespace)::generic_error_category
0019f4bc 00000019 R typeinfo name for std::_V2::error_category
0019f4d8 00000011 R typeinfo name for std::system_error
0019f4ec 00000028 r vtable for (anonymous namespace)::system_error_category
0019f514 00000028 r vtable for (anonymous namespace)::generic_error_category
0019f53c 00000014 R vtable for std::system_error
0019f550 00000101 R _ctype_
0019f654 00000004 R _global_impure_ptr
0019fda8 00000014 r fpi.1
0019fdbc 00000014 r fpinan.0
0019fdd0 00000028 r tinytens
0019fe34 00000010 r blanks.1
0019fe44 00000010 r zeroes.0
0019fe5c 00000022 r basefix.0
0019fe80 00000010 r blanks.1
0019fe90 00000010 r zeroes.0
0019fea0 00000010 r blanks.1
0019feb0 00000010 r zeroes.0
0019ff6c 00000100 R __hexdig
001a0080 000000bc r a1
001a013c 000000bc r a2
001a01f8 0000005b r a3
001a0254 00000070 r a6
001a02c4 000000a2 r a7
001a0368 00000040 r a8
001a03a8 0000172a r b02cf
001a1ad4 00001a7c r d02f4
001a3550 0000000c R _C_numeric_locale
001a35a0 00000028 R __mprec_bigtens
001a35c8 000000c8 R __mprec_tens
001a3690 0000000c r p05.0
001a369c 0000006c R __action_table
001a3708 00000100 R __chclass
001a3808 0000006c R __state_table
001a38b4 000031e6 r categories
001a6a9c 00000070 R dotab_stdnull
001a6b0c r 
001a6ebc R __exidx_start
001a720c R __exidx_end
001a8000 00000098 d Areas::allAreas
001a8098 00000001 D Logic::Ocarina
001a8099 00000001 D Logic::ScarecrowSong
001a809a 00000001 D Logic::SongOfHealing
001a809c 00000008 D shuffleOcaMusicDesc
001a80a4 00000008 D fanfaresOcarinaDesc
001a80ac 00000008 D onlyFanfaresDesc
001a80b4 00000008 D fanfaresOffDesc
001a80bc 00000008 D shuffleBGMDesc
001a80c4 00000008 D musicRandoDesc
001a80cc 00000008 D coloredBossKeysDesc
001a80d4 00000008 D coloredKeysDesc
001a80dc 00000008 D chestSizeDesc
001a80e4 00000008 D chestAnimDesc
001a80ec 00000008 D damageMultiDesc
001a80f4 00000008 D freeScarecrowDesc
001a80fc 00000008 D ocarinasDesc
001a8104 00000008 D shuffleCowsDesc
001a810c 00000008 D scrubsRandomPrices
001a8114 00000008 D scrubsExpensive
001a811c 00000008 D scrubsAffordable
001a8124 00000008 D scrubsOff
001a812c 00000008 D tokensAllTokens
001a8134 00000008 D tokensOverworld
001a813c 00000008 D tokensDungeon
001a8144 00000008 D tokensOff
001a814c 00000008 D shopsRandom
001a8154 00000008 D shopsFour
001a815c 00000008 D shopsThree
001a8164 00000008 D shopsTwo
001a816c 00000008 D shopsOne
001a8174 00000008 D shopsZero
001a817c 00000008 D shopsOff
001a8184 00000008 D linksPocketNothing
001a818c 00000008 D linksPocketAnything
001a8194 00000008 D linksPocketAdvancement
001a819c 00000008 D linksPocketDungeonReward
001a81a4 00000008 D linksPocketDefault
001a81ac 00000008 D skipSongReplaysDesc
001a81b4 00000008 D fastElegyStatuesDesc
001a81bc 00000008 D fastArrowSwitchDesc
001a81c4 00000008 D increasePushSpeedDesc
001a81cc 00000008 D goodDampeRNGDesc
001a81d4 00000008 D fastDogRaceDesc
001a81dc 00000008 D fastBankDesc
001a81e4 00000008 D fastLabFishDesc
001a81ec 00000008 D underwaterOcarinaDesc
001a81f4 00000008 D fierceDietyAnywhereDesc
001a81fc 00000008 D skipMinigamePhasesDesc
001a8204 00000008 D blastVeryLong
001a820c 00000008 D blastLong
001a8214 00000008 D blastShort
001a821c 00000008 D blastVeryShort
001a8224 00000008 D blastInstant
001a822c 00000008 D blastDefault
001a8234 00000008 D removeDDDesc
001a823c 00000008 D iceTrapsOnslaught
001a8244 00000008 D iceTrapsMayhem
001a824c 00000008 D iceTrapsExtra
001a8254 00000008 D iceTrapsNormal
001a825c 00000008 D iceTrapsOff
001a8264 00000008 D itemPoolMinimal
001a826c 00000008 D itemPoolScarce
001a8274 00000008 D itemPoolBalanced
001a827c 00000008 D itemPoolPlentiful
001a8284 00000008 D advancedTrapDmgDesc
001a828c 00000008 D basicTrapDmgDesc
001a8294 00000008 D randomTrapDmgDesc
001a829c 00000008 D menuButtonDesc
001a82a4 00000008 D ingameSpoilersHideDesc
001a82ac 00000008 D ingameSpoilersShowDesc
001a82b4 00000008 D changeOverworldItemsDesc
001a82bc 00000008 D veryStrongHintsDesc
001a82c4 00000008 D strongHintsDesc
001a82cc 00000008 D balancedHintsDesc
001a82d4 00000008 D uselessHintsDesc
001a82dc 00000008 D clearerHintsDesc
001a82e4 00000008 D gossipStonesHintsDesc
001a82ec 00000008 D songsAllLocations
001a82f4 00000008 D songsDungeonRewards
001a82fc 00000008 D songsSongLocations
001a8304 00000008 D startingSpinDesc
001a830c 00000008 D progressiveGildedSwordDesc
001a8314 00000008 D twinmoldTrialSkipDesc
001a831c 00000008 D gyorgTrialSkipDesc
001a8324 00000008 D gohtTrialSkipDesc
001a832c 00000008 D odolwaTrialSkipDesc
001a8334 00000008 D rsDurabilityInf
001a833c 00000008 D rsDurabilityVanilla
001a8344 00000008 D skipEponaRaceDesc
001a834c 00000008 D shuffleMerchantsDesc
001a8354 00000008 D shuffleGFAnywhere
001a835c 00000008 D shuffleGFSelf
001a8364 00000008 D shuffleGFVanilla
001a836c 00000008 D kokiriSwordDesc
001a8374 00000008 D magicBeansDesc
001a837c 00000008 D shuffleRewardsAnywhere
001a8384 00000008 D shuffleRewardsOverworld
001a838c 00000008 D shuffleRewardsAnyDungeon
001a8394 00000008 D shuffleRewardsEndOfDungeon
001a839c 00000008 D fairyAnywhere
001a83a4 00000008 D fairyOverworld
001a83ac 00000008 D fairyAnyDungeon
001a83b4 00000008 D fairyOwnDungeon
001a83bc 00000008 D fairyStartWith
001a83c4 00000008 D fairyVanilla
001a83cc 00000008 D bossKeyAnywhere
001a83d4 00000008 D bossKeyOverworld
001a83dc 00000008 D bossKeyAnyDungeon
001a83e4 00000008 D bossKeyOwnDungeon
001a83ec 00000008 D bossKeyVanilla
001a83f4 00000008 D bossKeyStartWith
001a83fc 00000008 D smallKeyAnywhere
001a8404 00000008 D smallKeyOverworld
001a840c 00000008 D smallKeyAnyDungeon
001a8414 00000008 D smallKeyOwnDungeon
001a841c 00000008 D smallKeyVanilla
001a8424 00000008 D smallKeyStartWith
001a842c 00000008 D mapCompassAnywhere
001a8434 00000008 D mapCompassOverworld
001a843c 00000008 D mapCompassAnyDungeon
001a8444 00000008 D mapCompassOwnDungeon
001a844c 00000008 D mapCompassVanilla
001a8454 00000008 D mapCompassStartWith
001a845c 00000008 D shuffleChestItemsRandom
001a8464 00000008 D shuffleChestItemsVanilla
001a846c 00000008 D heartDropDesc
001a8474 00000008 D ammoDropDesc
001a847c 00000008 D bombchuInLogicDesc
001a8484 00000008 D shuffleDungeonEntrancesDesc
001a848c 00000008 D dungeonRandomize
001a8494 00000008 D startWithMaxRupeesDesc
001a849c 00000008 D startWithConsumablesDesc
001a84a4 00000008 D ToggleLogicExpertDesc
001a84ac 00000008 D ToggleLogicIntermediateDesc
001a84b4 00000008 D ToggleLogicNoviceDesc
001a84bc 00000008 D ToggleLogicNoneDesc
001a84c4 00000008 D locationsReachableDesc
001a84cc 00000008 D logicVanilla
001a84d4 00000008 D logicNoLogic
001a84dc 00000008 D logicGlitched
001a84e4 00000008 D logicGlitchless
001a84ec 00000004 D tinyxml2::XMLUtil::writeBoolTrue
001a84f0 00000004 D tinyxml2::XMLUtil::writeBoolFalse
001a84f4 0000004c D tinyxml2::XMLDocument::_errorNames
001a8540 00000004 D currentConsole
001a8544 0000004c D defaultConsole
001a8590 00000001 d firstConsoleInit.0
001a8594 00000004 d kCount
001a8598 00000004 d kDelay
001a859c 00000004 d kInterval
001a85a0 W __stacksize__
001a85a4 00000004 D __cxxabiv1::__unexpected_handler
001a85a8 00000004 d (anonymous namespace)::system_category_instance
001a85ac 00000004 d (anonymous namespace)::generic_category_instance
001a85b0 00000004 D __cxxabiv1::__terminate_handler
001a85b4 0000000c d __sfp_recursive_mutex
001a85c0 0000000c d __sinit_recursive_mutex
001a85cc 00000004 D _impure_ptr
001a85d0 00000460 d impure_data
001a8a30 0000016c D __global_locale
001a8b9c 00000408 D __malloc_av_
001a8fa4 00000004 D __malloc_sbrk_base
001a8fa8 00000004 D __malloc_trim_threshold
001a8fac 0000000c d __malloc_recursive_mutex
001a8fb8 0000000c D __atexit_recursive_mutex
001a8fc4 00000002 d numempty
001a8fc8 00000004 d defaultDevice
001a8fcc 0000008c D devoptab_list
001a9058 00000400 d _current_working_directory
001a9458 00000004 d __hndl_lock
001a945c 0000000c d __stderr_handle
001a9468 0000000c d __stdin_handle
001a9474 0000000c d __stdout_handle
001a9480 00001000 d handles
001aa488 d _GLOBAL_OFFSET_TABLE_
001aa494 d __frame_dummy_init_array_entry
001aa494 D __init_array_start
001aa494 B __preinit_array_end
001aa494 B __preinit_array_start
001aa494 D __tdata_lma
001aa494 D __tdata_lma_end
001aa4e0 d __do_global_dtors_aux_fini_array_entry
001aa4e0 D __fini_array_start
001aa4e0 D __init_array_end
001aa514 D __bss_start__
001aa514 D __fini_array_end
001aa514 00000038 B Dungeon::WoodfallTemple
001aa54c 00000038 B Dungeon::SnowheadTemple
001aa584 00000038 B Dungeon::GreatBayTemple
001aa5bc 00000038 B Dungeon::StoneTowerTemple
001aa5f4 00000038 B Dungeon::SwampSpiderHouse
001aa62c 00000038 B Dungeon::OceansideSpiderHouse
001aa664 00000038 B Dungeon::PiratesFortress
001aa69c 00000038 B Dungeon::BeneathTheWell
001aa6d4 00000038 B Dungeon::AncientCastleOfIkana
001aa70c 00000038 B Dungeon::SecretShrine
001aa744 00000038 B Dungeon::TheMoon
001aa77c 00000001 b placementFailure
001aa780 000153a0 b hintTable
001bfb20 00021c50 b itemTable
001e1770 0000000c B allLocations
001e177c 0000000c B chestLocations
001e1788 00000002 B itemsPlaced
001e178a 00000001 B showItemProgress
001e178c 0000000c B dungeonRewardLocations
001e1798 0000000c B gossipStoneLocations
001e17a4 0000000c B overworldLocations
001e17b0 0000000c B everyPossibleLocation
001e17bc 0000000c B playthroughLocations
001e17c8 0000000c B wothLocations
001e17d4 00000001 B allLocationsReachable
001e17d5 00000001 B playthroughBeatable
001e17d8 00023b30 b locationTable
00205308 0000000c B ItemPool
00205314 0000000c B PendingJunkPool
00205320 0000000c B IceTrapModels
0020532c 000134c0 b areaTable
002187ec 00000001 B Logic::Scarecrow
002187ed 00000001 B Logic::FireArrows
002187ee 00000001 B Logic::IceArrows
002187ef 00000001 B Logic::LightArrows
002187f0 00000001 B Logic::Sticks
002187f1 00000001 B Logic::Pictobox
002187f2 00000001 B Logic::PowderKeg
002187f3 00000001 B Logic::DekuMask
002187f4 00000001 B Logic::GoronMask
002187f5 00000001 B Logic::ZoraMask
002187f6 00000001 B Logic::BlastMask
002187f7 00000001 B Logic::GreatFairyMask
002187f8 00000001 B Logic::PostmansHat
002187f9 00000001 B Logic::AllNightMask
002187fa 00000001 B Logic::BremenMask
002187fb 00000001 B Logic::DonGerosMask
002187fc 00000001 B Logic::MaskOfScents
002187fd 00000001 B Logic::RomanisMask
002187fe 00000001 B Logic::CircusLeadersMask
002187ff 00000001 B Logic::KafeisMask
00218800 00000001 B Logic::KamarosMask
00218801 00000001 B Logic::CouplesMask
00218802 00000001 B Logic::GibdosMask
00218803 00000001 B Logic::GarosMask
00218804 00000001 B Logic::CaptainsHat
00218805 00000001 B Logic::GiantsMask
00218806 00000001 B Logic::FierceDietyMask
00218807 00000001 B Logic::MaskOfTruth
00218808 00000001 B Logic::KokiriSword
00218809 00000001 B Logic::LensOfTruth
0021880a 00000001 B Logic::Bow
0021880b 00000001 B Logic::DekuStick
0021880c 00000001 B Logic::MagicMeter
0021880d 00000001 B Logic::IsItem
0021880e 00000001 B Logic::HasExplosives
0021880f 00000001 B Logic::ProgressiveMagic
00218810 00000001 B Logic::MagicPower
00218811 00000001 B Logic::ExtendedMagicPower
00218812 00000001 B Logic::ProgressiveBombBag
00218813 00000001 B Logic::BombBag20
00218814 00000001 B Logic::TownBombBag
00218815 00000001 B Logic::MountainBombBag
00218816 00000001 B Logic::AnyBombBag
00218817 00000001 B Logic::ProgressiveBow
00218818 00000001 B Logic::HerosBow
00218819 00000001 B Logic::Hookshot
0021881a 00000001 B Logic::StickPot
0021881b 00000001 B Logic::DekuBabaSticks
0021881c 00000001 B Logic::DekuStickDrop
0021881d 00000001 B Logic::NutPot
0021881e 00000001 B Logic::NutCrate
0021881f 00000001 B Logic::DekuBabaNuts
00218820 00000001 B Logic::DekuNutDrop
00218821 00000001 B Logic::BugShrub
00218822 00000001 B Logic::WanderingBugs
00218823 00000001 B Logic::BugRock
00218824 00000001 B Logic::BugsAccess
00218825 00000001 B Logic::LoneFish
00218826 00000001 B Logic::FishGroup
00218827 00000001 B Logic::FishAccess
00218828 00000001 B Logic::Bombs
00218829 00000001 B Logic::Nuts
0021882a 00000001 B Logic::HasBottle
0021882b 00000001 B Logic::Bugs
0021882c 00000001 B Logic::Fish
0021882d 00000001 B Logic::BuyBombchus5
0021882e 00000001 B Logic::BuyBombchus10
0021882f 00000001 B Logic::BuyBombchus20
00218830 00000001 B Logic::HasBombchus
00218831 00000001 B Logic::FoundBombchus
00218832 00000001 B Logic::Bombchus
00218833 00000001 B Logic::CanBlastOrSmash
00218834 00000001 B Logic::CanDive
00218835 00000001 B Logic::CanPlantBugs
00218836 00000001 B Logic::Epona
00218837 00000001 B Logic::EponasSong
00218838 00000001 B Logic::CanRideEpona
00218839 00000001 B Logic::MagicBean
0021883a 00000001 B Logic::MagicBeanPack
0021883b 00000001 B Logic::CanPlantBean
0021883c 00000001 B Logic::SongOfStorms
0021883d 00000001 B Logic::CanOpenStormGrotto
0021883e 00000001 B Logic::CanOpenBombGrotto
0021883f 00000001 B Logic::DekuStickFighting
00218840 00000001 B Logic::HasFireSource
00218841 00000001 B Logic::HasFireSourceWithTorch
00218842 00000001 B Logic::Explosives
00218843 00000001 B Logic::Arrows
00218844 00000001 B Logic::UseFireArrow
00218845 00000001 B Logic::UseIceArrow
00218846 00000001 B Logic::TownArcheryQuiver
00218847 00000001 B Logic::SwampArcheryQuiver
00218848 00000001 B Logic::UseLightArrow
00218849 00000001 B Logic::GildedSword
0021884a 00000001 B Logic::RazorSword
0021884b 00000001 B Logic::AnyBSword
0021884c 00000001 B Logic::WoodfallClear
0021884d 00000001 B Logic::AnyBottle
0021884e 00000001 B Logic::DekuPrincess
0021884f 00000001 B Logic::IkanaCanyonAccess
00218850 00000001 B Logic::BigPoe
00218851 00000001 B Logic::NorthAccess
00218852 00000001 B Logic::SnowheadClear
00218853 00000001 B Logic::HotSpringWater
00218854 00000001 B Logic::SpringWater
00218855 00000001 B Logic::PiratesFortressAccess
00218856 00000001 B Logic::PinnacleRockAccess
00218857 00000001 B Logic::ZoraEgg
00218858 00000001 B Logic::Mushroom
00218859 00000001 B Logic::WestAccess
0021885a 00000001 B Logic::Seahorse
0021885b 00000001 B Logic::CrossPoisonWater
0021885c 00000001 B Logic::PoisonSwampAccess
0021885d 00000001 B Logic::SonataOfAwakening
0021885e 00000001 B Logic::Fighting
0021885f 00000001 B Logic::WoodfallTempleAccess
00218860 00000001 B Logic::BossKeyWoodfallTemple
00218861 00000001 B Logic::GoronsLullaby
00218862 00000001 B Logic::SnowheadTempleAccess
00218863 00000001 B Logic::BossKeySnowheadTemple
00218864 00000001 B Logic::EponaAccess
00218865 00000001 B Logic::NewWaveBossaNova
00218866 00000001 B Logic::GreatBayTempleAccess
00218867 00000001 B Logic::GreatBayClear
00218868 00000001 B Logic::BossKeyGreatBayTemple
00218869 00000001 B Logic::IkanaGraveyardAccess
0021886a 00000001 B Logic::EastAccess
0021886b 00000001 B Logic::ElegyOfEmptiness
0021886c 00000001 B Logic::StoneTowerTempleAcccess
0021886d 00000001 B Logic::InvertedStoneTowerTempleAccess
0021886e 00000001 B Logic::BossKeyStoneTowerTemple
0021886f 00000001 B Logic::StoneTowerClear
00218870 00000001 B Logic::MoonAccess
00218871 00000001 B Logic::SnowheadTempleKeys
00218872 00000001 B Logic::OneSnowheadKey
00218873 00000001 B Logic::TwoSnowheadKeys
00218874 00000001 B Logic::StoneTowerTempleKeys
00218875 00000001 B Logic::OneStoneTowerKey
00218876 00000001 B Logic::TwoStoneTowerKeys
00218877 00000001 B Logic::ThreeStoneTowerKeys
00218878 00000001 B Logic::OneWoodfallKey
00218879 00000001 B Logic::WoodfallTempleKeys
0021887a 00000001 B Logic::OneGreatBayKey
0021887b 00000001 B Logic::GreatBayTempleKeys
0021887c 00000001 B Logic::WitchBottle
0021887d 00000001 B Logic::AlienBottle
0021887e 00000001 B Logic::BeaverRaceBottle
0021887f 00000001 B Logic::DampeBottle
00218880 00000001 B Logic::GoronRaceBottle
00218881 00000001 B Logic::ChateauBottle
00218882 00000001 B Logic::GreatFairySword
00218883 00000001 B Logic::AnySword
00218884 00000001 B Logic::BombBag
00218885 00000001 B Logic::SwampSpiderhouseTreeRoom
00218886 00000001 B Logic::ExitOceanSpiderHouse
00218887 00000001 B Logic::OceanSkulltulas
00218888 00000001 B Logic::StoneTowerMagicBean
00218889 00000001 B Logic::SwampScrubMagicBean
0021888a 00000001 B Logic::AnyMagicBean
0021888b 00000001 B Logic::WaterForBeans
0021888c 00000001 B Logic::TwoBottles
0021888d 00000001 B Logic::Townwallet200
0021888e 00000001 B Logic::OceanWallet500
0021888f 00000001 B Logic::AnyWallet
00218890 00000001 B Logic::LimitlessBeans
00218891 00000001 B Logic::FightTwinmold
00218892 00000001 B Logic::RoomKey
00218893 00000001 B Logic::NightInnAccess
00218894 00000001 B Logic::EnterSnowheadTemple
00218895 00000001 B Logic::GBTReverseWaterDirection
00218896 00000001 B Logic::HerosShield
00218897 00000001 B Logic::MirrorShield
00218898 00000001 B Logic::AnyShield
00218899 00000001 B Logic::AnyRedPotion
0021889a 00000001 B Logic::AnyBluePotion
0021889b 00000001 B Logic::AnyHealingPotion
0021889c 00000001 B Logic::TakeDamage
0021889d 00000001 B Logic::AccessToAllSwampSpiders
0021889e 00000001 B Logic::AccessToAllOceanSpiders
0021889f 00000001 B Logic::AllWoodfallStrays
002188a0 00000001 B Logic::AllSnowheadStrays
002188a1 00000001 B Logic::AllGreatBayStrays
002188a2 00000001 B Logic::AllStoneTowerStrays
002188a3 00000001 B Logic::LandTitle
002188a4 00000001 B Logic::SwampTitle
002188a5 00000001 B Logic::OceanTitle
002188a6 00000001 B Logic::MountainTitle
002188a7 00000001 B Logic::LetterKafei
002188a8 00000001 B Logic::LetterMama
002188a9 00000001 B Logic::AnyPaper
002188aa 00000001 B Logic::PoisonWaterAsZora
002188ab 00000001 B Logic::WFT2ndFloorSkip
002188ac 00000001 B Logic::StoneMask
002188ad 00000001 B Logic::KeatonMask
002188ae 00000001 B Logic::BunnyHood
002188af 00000001 B Logic::TwoMasks
002188b0 00000001 B Logic::ThreeMasks
002188b1 00000001 B Logic::FourMasks
002188b2 00000001 B Logic::AllMasks
002188b3 00000001 B Logic::OneMask
002188b4 00000001 B Logic::CanUseProjectile
002188b5 00000001 B Logic::noVariable
002188b6 00000001 B Logic::SpinAttack
002188b7 00000001 B Logic::BombersNotebook
002188b8 00000001 B Logic::GretFairysMask
002188b9 00000001 B Logic::PendantOfMemories
002188ba 00000001 B Logic::MoonsTear
002188bb 00000001 B Logic::LandTitleAccess
002188bc 00000001 B Logic::SwampTitleAccess
002188bd 00000001 B Logic::MountainTitleAccess
002188be 00000001 B Logic::OceanTitleAccess
002188bf 00000001 B Logic::RoomKeyAccess
002188c0 00000001 B Logic::LetterKafeiAccess
002188c1 00000001 B Logic::PendantAccess
002188c2 00000001 B Logic::LetterMamaAccess
002188c3 00000001 B Logic::MoonsTearAccess
002188c4 00000001 B Logic::OathToOrder
002188c5 00000001 B Logic::SongOfSoaring
002188c6 00000001 B Logic::OdolwaRemains
002188c7 00000001 B Logic::GohtRemains
002188c8 00000001 B Logic::GyorgRemains
002188c9 00000001 B Logic::TwinmoldRemains
002188ca 00000001 B Logic::ProgressiveWallet
002188cb 00000001 B Logic::SwampSkulltulaTokens
002188cc 00000001 B Logic::OceanSkulltulaTokens
002188cd 00000001 B Logic::BombchuDrop
002188ce 00000001 B Logic::CanCutShrubs
002188cf 00000001 B Logic::HasShield
002188d0 00000001 B Logic::CanShield
002188d1 00000001 B Logic::CanShootBubble
002188d2 00000001 B Logic::ClockTownStrayFairy
002188d3 00000001 B Logic::AddedProgressiveBombBags
002188d4 00000001 B Logic::AddedProgressiveMagics
002188d5 00000001 B Logic::AddedProgressiveBows
002188d6 00000001 B Logic::AddedProgressiveWallets
002188d7 00000001 B Logic::SwampTokensInPool
002188d8 00000001 B Logic::OceanTokensInPool
002188d9 00000001 B Logic::PlacedMasks
002188da 00000001 B Logic::STStraysInPool
002188db 00000001 B Logic::SHStraysInPool
002188dc 00000001 B Logic::WFStraysInPool
002188dd 00000001 B Logic::StoneTowerStrayFairies
002188de 00000001 B Logic::GBTStrayFairies
002188df 00000001 B Logic::SnowheadStrayFairies
002188e0 00000001 B Logic::WoodfallStrayFairies
002188e4 0000004c b (anonymous namespace)::topScreen
00218930 00000004 b (anonymous namespace)::currentMenu
00218934 00000004 b (anonymous namespace)::currentSetting
00218938 0000000c b (anonymous namespace)::presetEntries
00218944 0000004c b (anonymous namespace)::bottomScreen
00218990 00000002 b (anonymous namespace)::settingBound
00218994 0000000c b (anonymous namespace)::menuList
002189a0 00000002 b (anonymous namespace)::pastSeedLength
002189a2 00000001 b (anonymous namespace)::seedChanged
002189a4 00000018 b CACHED_SETTINGS_FILENAME
002189bc 00000018 b CACHED_COSMETICS_FILENAME
002189d8 00000001 b init
002189e0 000009c8 b generator
002193a8 0000000c B GlitchDifficulties
002193b4 00000005 B Settings::hashIconIndexes
002193bc 00000040 B Settings::Logic
002193fc 00000040 B Settings::LocationsReachable
0021943c 00000040 B Settings::ShuffleDungeonEntrances
0021947c 00000040 B Settings::BombchusInLogic
002194bc 00000040 B Settings::AmmoDrops
002194fc 00000040 B Settings::HeartDropRefills
0021953c 00000040 B Settings::ShuffleRewards
0021957c 00000040 B Settings::ShuffleGFRewards
002195bc 00000040 B Settings::LinksPocketItem
002195fc 00000040 B Settings::ShuffleSongs
0021963c 00000040 B Settings::Tokensanity
0021967c 00000040 B Settings::Scrubsanity
002196bc 00000040 B Settings::Shopsanity
002196fc 00000040 B Settings::ShuffleMagicBeans
0021973c 00000040 B Settings::ShuffleKokiriSword
0021977c 00000040 B Settings::ShuffleMerchants
002197bc 00000040 B Settings::MapsAndCompasses
002197fc 00000040 B Settings::Keysanity
0021983c 00000040 B Settings::BossKeysanity
0021987c 00000040 B Settings::SkipMinigamePhases
002198bc 00000040 B Settings::SkipEponaRace
002198fc 00000040 B Settings::DamageMultiplier
0021993c 00000040 B Settings::GossipStoneHints
0021997c 00000040 B Settings::ChestAnimations
002199bc 00000040 B Settings::ChestSize
002199fc 00000040 B Settings::GenerateSpoilerLog
00219a3c 00000040 B Settings::IngameSpoilers
00219a7c 00000040 B Settings::MenuOpeningButton
00219abc 00000040 B Settings::RandomTrapDmg
00219afc 00000040 B Settings::RsDurability
00219b3c 00000040 B Settings::ItemPoolValue
00219b7c 00000040 B Settings::IceTrapValue
00219bbc 00000040 B Settings::CustomTunicColors
00219bfc 00000040 B Settings::ColoredKeys
00219c3c 00000040 B Settings::ColoredBossKeys
00219c7c 00000040 B Settings::OdolwaTrialSkip
00219cbc 00000040 B Settings::GohtTrialSkip
00219cfc 00000040 B Settings::GyorgTrialSkip
00219d3c 00000040 B Settings::TwinmoldTrialSkip
00219d7c 00000040 B Settings::ProgressiveGildedSword
00219dbc 00000040 B Settings::StartingSpin
00219dfc 00000040 B Settings::StartingConsumables
00219e3c 00000040 B Settings::StartingMaxRupees
00219e7c 00000040 B Settings::StartingOcarina
00219ebc 00000040 B Settings::StartingBow
00219efc 00000040 B Settings::StartingFireArrows
00219f3c 00000040 B Settings::StartingIceArrows
00219f7c 00000040 B Settings::StartingLightArrows
00219fbc 00000040 B Settings::StartingBombBag
00219ffc 00000040 B Settings::StartingBombchus
0021a03c 00000040 B Settings::StartingStickCapacity
0021a07c 00000040 B Settings::StartingNutCapacity
0021a0bc 00000040 B Settings::StartingMagicBean
0021a0fc 00000040 B Settings::StartingPowderKeg
0021a13c 00000040 B Settings::StartingPictographBox
0021a17c 00000040 B Settings::StartingLensOfTruth
0021a1bc 00000040 B Settings::StartingHookshot
0021a1fc 00000040 B Settings::StartingGreatFairySword
0021a23c 00000040 B Settings::StartingBottle1
0021a27c 00000040 B Settings::StartingBottle2
0021a2bc 00000040 B Settings::StartingBottle3
0021a2fc 00000040 B Settings::StartingBottle4
0021a33c 00000040 B Settings::StartingBottle5
0021a37c 00000040 B Settings::StartingBottle6
0021a3bc 00000040 B Settings::StartingBottle7
0021a3fc 00000040 B Settings::StartingKokiriSword
0021a43c 00000040 B Settings::StartingRazorSword
0021a47c 00000040 B Settings::StartingGildedSword
0021a4bc 00000040 B Settings::StartingMagicMeter
0021a4fc 00000040 B Settings::StartingDoubleDefense
0021a53c 00000040 B Settings::StartingHealth
0021a57c 0000000c B Settings::gimmickOptions
0021a588 0000000c B Settings::timesaverOptions
0021a594 0000000c B Settings::cosmeticOptions
0021a5a0 0000000c B Settings::excludeLocationsOptions
0021a5ac 0000000c B Settings::startingInventoryOptions
0021a5b8 0000000c B Settings::logicOptions
0021a5c4 0000000c B Settings::trickOptions
0021a5d0 0000000c B Settings::glitchOptions
0021a5dc 0000000c B Settings::shuffleItemOptions
0021a5e8 0000000c B Settings::otherSettingsOptions
0021a5f4 00000040 B Settings::StartingInventoryToggle
0021a634 00000040 B Settings::StartingMaskToggle
0021a674 00000040 B Settings::StartingSongsToggle
0021a6b4 00000040 B Settings::StartingUpgradesToggle
0021a6f4 00000040 B Settings::StartingQuestToggle
0021a734 00000040 B Settings::RemoveDoubleDefense
0021a774 00000040 B Settings::ChildTunicColor
0021a7b4 0000000c B Settings::mainMenu
0021a7c0 00000018 B Settings::finalChildTunicColor[abi:cxx11]
0021a7d8 00000018 B Settings::seed[abi:cxx11]
0021a7f0 00000018 B Settings::version[abi:cxx11]
0021a808 0000000c B Settings::bottleOptions[abi:cxx11]
0021a814 0000000c B Settings::healthOptions[abi:cxx11]
0021a820 00000040 B Settings::ToggleAllTricks
0021a860 00000040 B Settings::StartingBottle8
0021a8a0 00000040 B Settings::StartingOathToOrder
0021a8e0 00000040 B Settings::StartingEponasSong
0021a920 00000040 B Settings::StartingSongOfStorms
0021a960 00000040 B Settings::StartingSonataOfAwakening
0021a9a0 00000040 B Settings::StartingGoronsLullaby
0021a9e0 00000040 B Settings::StartingNewWaveBossaNova
0021aa20 00000040 B Settings::StartingElegyOfEmptiness
0021aa60 00000040 B Settings::StartingSongOfHealing
0021aaa0 00000040 B Settings::StartingSongOfSoaring
0021aae0 00000040 B Settings::StartingHerosShield
0021ab20 00000040 B Settings::StartingMirrorShield
0021ab60 00000040 B Settings::StartingWallet
0021aba0 00000040 B Settings::StartingOdolwaRemains
0021abe0 00000040 B Settings::StartingGohtRemains
0021ac20 00000040 B Settings::StartingGyorgRemains
0021ac60 00000040 B Settings::StartingTwinmoldRemains
0021aca0 00000040 B Settings::StartingSwampToken
0021ace0 00000040 B Settings::StartingOceanToken
0021ad20 00000040 B Settings::StartingDekuMask
0021ad60 00000040 B Settings::StartingGoronMask
0021ada0 00000040 B Settings::StartingZoraMask
0021ade0 00000040 B Settings::StartingBunnyHood
0021ae20 00000040 B Settings::StartingKeatonMask
0021ae60 00000040 B Settings::StartingPostmanHat
0021aea0 00000040 B Settings::StartingAllNightMask
0021aee0 00000040 B Settings::StartingBlastMask
0021af20 00000040 B Settings::StartingStoneMask
0021af60 00000040 B Settings::StartingGreatFairyMask
0021afa0 00000040 B Settings::StartingBremenMask
0021afe0 00000040 B Settings::StartingDonGeroMask
0021b020 00000040 B Settings::StartingMaskOfScents
0021b060 00000040 B Settings::StartingRomanisMask
0021b0a0 00000040 B Settings::StartingCircusLeaderMask
0021b0e0 00000040 B Settings::StartingKafeiMask
0021b120 00000040 B Settings::StartingCouplesMask
0021b160 00000040 B Settings::StartingKamarosMask
0021b1a0 00000040 B Settings::StartingGibdosMask
0021b1e0 00000040 B Settings::StartingCaptainsHat
0021b220 00000040 B Settings::StartingGiantsMask
0021b260 00000040 B Settings::StartingFierceDietyMask
0021b2a0 00000040 B Settings::StartingMaskOfTruth
0021b2e0 00000040 B Settings::RandomizeDungeon
0021b320 00000040 B Settings::StrayFairysanity
0021b360 00000040 B Settings::ShuffleChests
0021b3a0 00000040 B Settings::ClearerHints
0021b3e0 00000040 B Settings::HintDistribution
0021b420 00000040 B Settings::ChangeOverworldItems
0021b460 00000040 B Settings::BlastMaskCooldown
0021b4a0 00000040 B Settings::UnderwaterOcarina
0021b4e0 00000040 B Settings::FierceDietyAnywhere
0021b520 00000040 B Settings::FastLabFish
0021b560 00000040 B Settings::FastBank
0021b5a0 00000040 B Settings::FastDogRace
0021b5e0 00000040 B Settings::GoodDampeRNG
0021b620 00000040 B Settings::IncreasePushSpeed
0021b660 00000040 B Settings::FastArrowSwitch
0021b6a0 00000040 B Settings::FastElegyStatues
0021b6e0 00000040 B Settings::SkipSongReplays
0021b720 0000000c B Settings::trialSkipOptions
0021b72c 0000000c b Settings::tunicOptions
0021b738 0000000c b Settings::cosmeticDescriptions
0021b744 0000000c b Settings::fanfareOptions
0021b750 0000000c b Settings::fanfareDescriptions
0021b75c 00000040 B Settings::FakeGlitch
0021b79c 00000030 B Settings::loadSettingsPreset
0021b7cc 00000030 B Settings::saveSettingsPreset
0021b7fc 00000030 B Settings::deleteSettingsPreset
0021b82c 00000030 B Settings::resetToDefaultSettings
0021b85c 0000000c B Settings::settingsPresetItems
0021b868 00000030 B Settings::logicSettings
0021b898 00000030 B Settings::tricks
0021b8c8 00000030 B Settings::startingInventory
0021b8f8 00000030 B Settings::excludeLocations
0021b928 00000030 B Settings::glitchSettings
0021b958 00000030 B Settings::itemSettings
0021b988 00000030 B Settings::otherSettings
0021b9b8 0000000c B Settings::mainSettingsOptions
0021b9c4 00000030 B Settings::mainSettings
0021b9f4 00000030 B Settings::gimmicks
0021ba24 00000030 B Settings::timeSaverSettings
0021ba54 00000030 B Settings::settingsPresets
0021ba84 00000030 B Settings::cosmetics
0021bab4 00000030 B Settings::generateRandomizer
0021bae4 00000001 B Settings::ShuffleSpecialIndoorEntrances
0021bae5 00000001 B Settings::ShuffleInteriorEntrances
0021bae6 00000001 B Settings::PlayOption
0021bae8 00000024 B Settings::rDungeonRewardOverrides
0021bb0c 00000004 B Settings::LinksPocketRewardBitMask
0021bb10 00000078 b randomizerHash
0021bb88 00000018 b (anonymous namespace)::placementtxt
0021bba0 0000556c b spoilerData
0022110c 0000000c B StartingInventory
00221118 00000001 B AdditionalHeartContainers
00221119 b completed.1
0022111c b object.0
00221134 00000004 V __romfs_path
00221138 00000004 b romfs_mount_list
0022113c 0000004c B currentCopy
00221188 00000004 b gfxBottomFramebufferMaxSize
0022118c 00000008 b gfxBottomFramebuffers
00221194 00000002 b gfxCurBuf
00221198 00000002 b gfxFramebufferFormats
0022119c 00000002 b gfxIsDoubleBuf
0022119e 00000001 b gfxIsVram
002211a0 00000004 b gfxTopFramebufferMaxSize
002211a4 00000008 b gfxTopFramebuffers
002211ac 00000001 b gfxTopMode
002211b0 00000004 b screenAlloc
002211b4 00000004 b screenFree
002211b8 00000004 b gspEvent
002211bc 0000001c b gspEventCb
002211d8 0000001c b gspEventCbData
002211f4 00000007 b gspEventCbOneShot
002211fc 00000004 b gspEventThread
00221200 00000038 b gspEvents
00221238 00000004 b gspGpuHandle
0022123c 00000001 b gspGpuRight
00221240 00000004 b gspLastEvent
00221244 00000004 b gspRefCount
00221248 00000001 b gspRunEvents
0022124c 00000004 b gspSharedMem
00221250 00000004 b gspSharedMemHandle
00221254 00000001 b gspThreadId
00221255 00000001 b aptChainloadFlags
00221256 00000001 b aptChainloadMediatype
00221258 00000008 b aptChainloadTid
00221260 00000004 b aptEventHandlerThread
00221264 00000001 b aptEventHandlerThreadQuit
00221268 00000008 b aptEvents
00221270 0000000c b aptFirstHook
0022127c 00000004 b aptFlags
00221280 00000001 b aptHomeButtonState
00221284 00000004 b aptLockHandle
00221288 00000004 b aptMessageFunc
0022128c 00000004 b aptMessageFuncData
00221290 00001000 b aptParameters
00222290 00000008 b aptReceiveEvent
00222298 00000004 b aptRefCount
0022229c 00000008 b aptSleepEvent
002222a4 00000001 b flagInit.1
002222a5 00000001 b flagValue.0
002222a8 00000004 b serviceName.6
002222ac 00000006 b aVec
002222b4 00000004 b cPos
002222b8 00000006 b gRate
002222c0 00000014 B hidEvents
002222d4 00000004 B hidHandle
002222d8 00000004 B hidMemHandle
002222dc 00000004 b hidRefCount
002222e0 00000004 B hidSharedMem
002222e4 00000004 b kDown
002222e8 00000004 b kHeld
002222ec 00000004 b kOld
002222f0 00000004 b kRepeat
002222f4 00000004 b kUp
002222f8 00000004 b tPos
002222fc 00000001 b usingIrrst
00222300 00000080 b fsExemptArchives
00222380 00000004 b fsuHandle
00222384 00000004 b fsuRefCount
00222388 00000004 b swkbdSharedMem
0022238c 00000004 b swkbdSharedMemHandle
00222390 00000004 B __system_retAddr
00222394 00000004 B __system_argc
00222398 00000004 B __system_argv
0022239c b saved_stack
002223a4 0000000c b sAddrMap
002223b0 00000008 b sVramPool
002223b8 00000008 b sLinearPool
002223c0 0000000c b sAddrMap
002223cc 00000004 b arbiter
002223d0 00000001 V __ctru_speedup
002223d4 00000004 b srvHandle
002223d8 00000004 b srvRefCount
002223dc 00000004 b currentAddr
002223e0 00000004 b maxAddr
002223e4 00000004 b minAddr
002223e8 00000004 b csPos
002223ec 00000004 B irrstEvent
002223f0 00000004 B irrstHandle
002223f4 00000004 B irrstMemHandle
002223f8 00000004 b irrstRefCount
002223fc 00000004 B irrstSharedMem
00222400 00000004 b kHeld
00222404 00000004 b srvPmHandle
00222408 00000004 b ptmSysmHandle
0022240c 00000004 b ptmSysmRefCount
00222410 00000004 B __ctru_heap
00222414 00000004 V __ctru_heap_size
00222418 00000004 B __ctru_linear_heap
0022241c 00000004 V __ctru_linear_heap_size
00222420 00000004 b archive_device_cwd
00222428 00000540 b archive_devices
00222968 00000001 b archive_initialized
0022296c 00000004 b (anonymous namespace)::__new_handler
00222970 00000010 V std::string::_Rep::_S_empty_rep_storage
00222980 00000004 V guard variable for std::__cxx11::collate<char>::id
00222984 00000004 V guard variable for std::__cxx11::messages<char>::id
00222988 00000004 V guard variable for std::__cxx11::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
0022298c 00000004 V guard variable for std::__cxx11::numpunct<char>::id
00222990 00000004 V guard variable for std::__cxx11::moneypunct<char, true>::id
00222994 00000004 V guard variable for std::__cxx11::moneypunct<char, false>::id
00222998 00000004 V guard variable for std::__cxx11::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
0022299c 00000004 V guard variable for std::__cxx11::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
002229a0 00000004 V guard variable for std::__cxx11::collate<wchar_t>::id
002229a4 00000004 V guard variable for std::__cxx11::messages<wchar_t>::id
002229a8 00000004 V guard variable for std::__cxx11::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
002229ac 00000004 V guard variable for std::__cxx11::numpunct<wchar_t>::id
002229b0 00000004 V guard variable for std::__cxx11::moneypunct<wchar_t, true>::id
002229b4 00000004 V guard variable for std::__cxx11::moneypunct<wchar_t, false>::id
002229b8 00000004 V guard variable for std::__cxx11::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
002229bc 00000004 V guard variable for std::__cxx11::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
002229c0 00000004 V guard variable for std::collate<char>::id
002229c4 00000004 V guard variable for std::messages<char>::id
002229c8 00000004 V guard variable for std::time_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
002229cc 00000004 V guard variable for std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
002229d0 00000004 V guard variable for std::__timepunct<char>::id
002229d4 00000004 V guard variable for std::numpunct<char>::id
002229d8 00000004 V guard variable for std::moneypunct<char, true>::id
002229dc 00000004 V guard variable for std::moneypunct<char, false>::id
002229e0 00000004 V guard variable for std::money_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
002229e4 00000004 V guard variable for std::money_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
002229e8 00000004 V guard variable for std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::id
002229ec 00000004 V guard variable for std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char> > >::id
002229f0 00000004 V guard variable for std::collate<wchar_t>::id
002229f4 00000004 V guard variable for std::messages<wchar_t>::id
002229f8 00000004 V guard variable for std::time_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
002229fc 00000004 V guard variable for std::time_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00222a00 00000004 V guard variable for std::__timepunct<wchar_t>::id
00222a04 00000004 V guard variable for std::numpunct<wchar_t>::id
00222a08 00000004 V guard variable for std::moneypunct<wchar_t, true>::id
00222a0c 00000004 V guard variable for std::moneypunct<wchar_t, false>::id
00222a10 00000004 V guard variable for std::money_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00222a14 00000004 V guard variable for std::money_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00222a18 00000004 V guard variable for std::num_put<wchar_t, std::ostreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00222a1c 00000004 V guard variable for std::num_get<wchar_t, std::istreambuf_iterator<wchar_t, std::char_traits<wchar_t> > >::id
00222a20 00000010 b (anonymous namespace)::emergency_pool
00222a30 0000000c b eh_globals
00222a3c 00000028 B __malloc_current_mallinfo
00222a64 00000004 B __malloc_max_sbrked_mem
00222a68 00000004 B __malloc_max_total_mem
00222a6c 00000004 B __malloc_top_pad
00222a70 00000004 b heap_start.0
00222a74 00000004 B fake_heap_end
00222a78 00000004 B fake_heap_start
00222a7c 00000400 b temp_cwd
00222e7c 00000048 B __syscalls
00222ec4 B __tls_start
00223acc B __bss_end__
00223acc A __end__
00223acc B __tls_end
